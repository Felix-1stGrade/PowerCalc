(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    360876,       6814]
NotebookOptionsPosition[    357491,       6715]
NotebookOutlinePosition[    358093,       6738]
CellTagsIndexPosition[    358050,       6735]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["\:4e0d\:540c\:7684\:4e09\:76f8\:8f93\:5165\:5bf9DQ\
\:5206\:91cf\:7684\:5f71\:54cd", "BookChapterTitle",
 FontFamily->"\:5fae\:8f6f\:96c5\:9ed1",
 FontSize->36,
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.7427798995306115`*^9, 3.7427799074834113`*^9}, {
   3.7463286032828317`*^9, 3.746328637450232*^9}, 3.7463310539286475`*^9, {
   3.746331092293048*^9, 3.746331095151848*^9}, {3.775513681100418*^9, 
   3.7755137297720184`*^9}},
 TextAlignment->Center],

Cell[TextData[StyleBox["   \
1\:3001\:4e09\:76f8\:9759\:6b62\:5750\:6807\:7cfbABC", "Section",
 FontFamily->"\:5fae\:8f6f\:96c5\:9ed1"]], "Text",
 CellMargins->{{
   0.009999999999999988 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 
    0.009999999999999997 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
   0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.02 
    FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}},
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.742811393362201*^9, 3.742811445643299*^9}, {
   3.742811950329517*^9, 3.742811959376379*^9}, {3.7428123671163626`*^9, 
   3.7428123732882223`*^9}, 3.7428129136306314`*^9, {3.7428147874765177`*^9, 
   3.742814788773412*^9}, {3.746328729664832*^9, 3.746328761859233*^9}},
 TextJustification->0.],

Cell["\:4e09\:76f8\:7535\:538b\:5982\:4e0b", "TextIndent",
 CellChangeTimes->{{3.7755137555062184`*^9, 3.7755137628806186`*^9}, {
  3.775513897832219*^9, 3.7755139055776196`*^9}}],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"U", " ", "=", "220"}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Uma", "=", 
    RowBox[{
     RowBox[{"Sqrt", "[", "2", "]"}], "*", "300"}]}], ";"}], 
  "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Umb", "=", 
    RowBox[{
     RowBox[{"Sqrt", "[", "2", "]"}], "*", "220"}]}], ";"}], 
  "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Umc", "=", 
    RowBox[{
     RowBox[{"Sqrt", "[", "2", "]"}], "*", "50"}]}], ";"}], 
  "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ua1", "=", 
    RowBox[{"Uma", "*", 
     RowBox[{"Cos", "[", "wt", "]"}]}]}], ";"}], 
  "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ub1", "=", 
    RowBox[{"Umb", "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"wt", "-", 
       RowBox[{"120", "*", 
        RowBox[{"Pi", "/", "180"}]}]}], "]"}]}]}], ";"}], 
  "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"uc1", "=", 
    RowBox[{"Umc", "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"wt", "+", 
       RowBox[{"120", "*", 
        RowBox[{"Pi", "/", "180"}]}]}], "]"}]}]}], ";"}], "Code"]}], "Code",
 CellChangeTimes->{3.775513781963419*^9}],

Cell["3\:6b21\:8c10\:6ce2", "TextIndent",
 CellChangeTimes->{{3.775513814075819*^9, 3.775513819300019*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Uh3", "=", 
   RowBox[{
    RowBox[{"Sqrt", "[", "2", "]"}], "*", "50"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ua3", "=", 
   RowBox[{"Uh3", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"3", "*", "wt"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ub3", "=", 
   RowBox[{"Uh3", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"3", "*", 
      RowBox[{"(", 
       RowBox[{"wt", "-", 
        RowBox[{"120", "*", 
         RowBox[{"Pi", "/", "180"}]}]}], ")"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uc3", "=", 
   RowBox[{"Uh3", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"3", "*", 
      RowBox[{"(", 
       RowBox[{"wt", "+", 
        RowBox[{"120", "*", 
         RowBox[{"Pi", "/", "180"}]}]}], ")"}]}], "]"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.775513793700819*^9, 3.7755138331252193`*^9}}],

Cell["5\:6b21\:8c10\:6ce2", "TextIndent",
 CellChangeTimes->{{3.7755138444686193`*^9, 3.775513847900019*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Uh5", "=", 
   RowBox[{
    RowBox[{"Sqrt", "[", "2", "]"}], "*", "50"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ua5", "=", 
   RowBox[{"Uh5", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"5", "*", "wt"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ub5", "=", 
   RowBox[{"Uh5", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"5", "*", 
      RowBox[{"(", 
       RowBox[{"wt", "-", 
        RowBox[{"120", "*", 
         RowBox[{"Pi", "/", "180"}]}]}], ")"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uc5", "=", 
   RowBox[{"Uh5", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"5", "*", 
      RowBox[{"(", 
       RowBox[{"wt", "+", 
        RowBox[{"120", "*", 
         RowBox[{"Pi", "/", "180"}]}]}], ")"}]}], "]"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{3.775513861407219*^9}],

Cell["7\:6b21\:8c10\:6ce2", "TextIndent",
 CellChangeTimes->{{3.775513875425419*^9, 3.7755138783078194`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Uh7", "=", 
   RowBox[{
    RowBox[{"Sqrt", "[", "2", "]"}], "*", "50"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ua7", "=", 
   RowBox[{"Uh7", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"7", "*", "wt"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ub7", "=", 
   RowBox[{"Uh7", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"7", "*", 
      RowBox[{"(", 
       RowBox[{"wt", "-", 
        RowBox[{"120", "*", 
         RowBox[{"Pi", "/", "180"}]}]}], ")"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uc7", "=", 
   RowBox[{"Uh7", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"7", "*", 
      RowBox[{"(", 
       RowBox[{"wt", "+", 
        RowBox[{"120", "*", 
         RowBox[{"Pi", "/", "180"}]}]}], ")"}]}], "]"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{3.7755138901678195`*^9}],

Cell["\:5b9e\:9645\:4e09\:76f8\:7535\:538b", "TextIndent",
 CellChangeTimes->{{3.77551392301822*^9, 3.7755139257018194`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ua", "=", "ua1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ub", "=", "ub1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uc", "=", "uc1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uab", "=", 
   RowBox[{"ua", "-", "ub"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ubc", "=", 
   RowBox[{"ub", "-", "uc"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uca", "=", 
   RowBox[{"uc", "-", "ua"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.77551394318182*^9, 3.7755139514274197`*^9}}],

Cell["\:4e09\:76f8\:76f8\:7535\:538b\:6ce2\:5f62\:5982\:4e0b", "TextIndent",
 CellChangeTimes->{{3.77551397008602*^9, 3.7755139759454203`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ua", ",", "ub", ",", "uc"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"wt", ",", "0", ",", 
     RowBox[{"4", "*", "Pi"}]}], "}"}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(u\), \(a\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(u\), \(b\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(u\), \(c\)]\)\>\""}], "}"}], ",", 
      RowBox[{"LegendFunction", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Framed", "[", 
          RowBox[{"#", ",", 
           RowBox[{"RoundingRadius", "\[Rule]", "0"}]}], "]"}], "&"}], 
        ")"}]}], ",", 
      RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", 
      RowBox[{"{", 
       RowBox[{"RGBColor", "[", "\"\<#107c41\>\"", "]"}], "}"}], ",", "Red"}],
      "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Code",
 CellChangeTimes->{3.77551398829522*^9, 3.7755188755620403`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.06274509803921569, 0.48627450980392156`, 0.2549019607843137]], 
        LineBox[CompressedData["
1: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
8FjjmA6jgYMcnBUpylMMeDrentnC4aB2mwJHYUlVcJ7OfLC/l3j/tn5tXiGt
CnGruAJqOtlIWE9DlVtWFaQSZQoWWtjITunO3IyCKnR0BH7df4uN+n/3FAyp
qMKutPIhp0Q2Gk3m/1mtrQr1Rb06plpsRGkLjdvnqAour3uOVvOGoQa9mm8O
zqpQvf+lJvs3C+27Pmdj7aIKgp57roj0stCl84lrTNxU4WHnbvk/pSyk6nW5
fb2vKtQoSI1bmbKQ4fIrca6DqvDimW7rsWOhyEvf8OrVDFX45bb9y8HPwSjw
97Pp91mqIOAl4BTZFozYlw+YiOeoQsvgpxGnq8EoXvD4x5h8VdDQ+CxfGRSM
LvY9kbMrVYXM1YczXo8Fod4o57SFelXQLbvftzwZiMwbsSjbflUo5248+eOL
P7Jl8bYnDKjC8ibdtn8t/mivcpbkvQ+q0B2zVvh3oT/yT75TTf+iCreKD7vG
uvqjE/tIo/MjqmDNNX16d48fap4741W6pApLd+y0axt8UdtNpcp+khr44ab3
BDN9UadX5bIojxpYmvZO7uD4ov6OVxcPr1ADqWnbNUFqvmg2V+6NjagauBlc
tDmW7YOWrW6oJIirgerFfaqC4T6In4cZfpesBkuOPGKR1j6IHOwlRpdRg59K
CY8F+H2QnNLUgf1yanA/48uoxkdvpPzy5M00BTWYb9Z+p3fPG61LlFpsU1ID
a9mEOo0L3mizQbnFPE0NBiOWbwtg3ug/hcmbbA==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 4 Pi}, {-424.2638620295135, 424.2640687119146}}, {{
        0, 12.566370614359172`}, {-424.2638620295135, 424.2640687119146}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(a\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(b\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(c\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], RoundingRadius -> 0, StripOnInput -> False], 
        TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.04183006535947713, 0.3241830065359477, 
                    0.16993464052287582`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.06274509803921569, 0.48627450980392156, \
0.2549019607843137]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 0, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7755140423878202`*^9, 3.7755140430138206`*^9}, 
   3.775516217737634*^9, 3.7755188800660405`*^9}]
}, Open  ]],

Cell["\:4e09\:76f8\:7ebf\:7535\:538b\:6ce2\:5f62\:5982\:4e0b", "TextIndent",
 CellChangeTimes->{{3.77551400628402*^9, 3.77551401203522*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"uab", ",", "ubc", ",", "uca"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"wt", ",", "0", ",", 
     RowBox[{"4", "*", "Pi"}]}], "}"}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(u\), \(ab\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(u\), \(bc\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(u\), \(ca\)]\)\>\""}], "}"}], ",", 
      RowBox[{"LegendFunction", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Framed", "[", 
          RowBox[{"#", ",", 
           RowBox[{"RoundingRadius", "\[Rule]", "0"}]}], "]"}], "&"}], 
        ")"}]}], ",", 
      RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", 
      RowBox[{"{", 
       RowBox[{"RGBColor", "[", "\"\<#107c41\>\"", "]"}], "}"}], ",", "Red"}],
      "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Code",
 CellChangeTimes->{
  3.7754579560518003`*^9, {3.7754581495684004`*^9, 3.7754581536014004`*^9}, {
   3.7754583275874004`*^9, 3.7754583293774004`*^9}, {3.7754584678474*^9, 
   3.7754584704664*^9}, {3.7754585227244005`*^9, 3.7754585399694004`*^9}, {
   3.7754587925142*^9, 3.7754587977632003`*^9}, {3.7754590007862005`*^9, 
   3.7754590077622004`*^9}, {3.7754591031072*^9, 3.7754591070872*^9}, {
   3.7754603403220005`*^9, 3.775460344833*^9}, 3.7755139383178196`*^9, 
   3.77551403005062*^9, 3.7755188734020405`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1: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
fUFw8arRWfjAysOUrJcBk5aN5dduucBjnrOF7a83AF7q0itfUMVbxYW8XJo3
wp8uoYlfN9zxRNKc2K6eTcDvKjvneTkQ/5nc2LitdxPo6d/3CSkPxKPmhr60
gU3wa3eFj19HIP4ukfF6w/Am4LlTHi0vHoR7c7SieeY2wfDQHo2UG0HYxfrZ
zDifLLRzlHI65QfjwydZ7ZuUZaFEb6hkIj8Um2Rcq3y+VRY4v7pf2t4Uio1f
K/E1bJeFvtNRvyy+hWKjLeZVNTtlYXFV9Y41hfg+PHFbuFxbFvQ/JVeq3gzD
miH7WzKNZUHmyrP2DZfDsVx8vIqvlywo87MwuO0icUCPWrTLaVnY2Lsv3Tc4
EuPNQ62WPrKQvOV7Zn1KJHZo0vHSCZCFdMEwDs5XkTiLdTqfN1wWbmpap5vs
isIikSek8i/IQiNJKjqPIxqz+atyfi6SBYNp/ZPlKTHYDA8cay2Rha9xb5bj
imNw3vrE2w33ZGFl4vFZnecxWO/+ML3wgSwEOmZWHp2MweG/b4SfrZaFbMEk
1vMKsXjanWtS8JUsnKtycLCPjcVDtn29e38S651mXuykMbCArvVdp1+yMGho
SlnbycDqmzrPRv+WBZZfujrVugyc8O2NQO2ELMxq/wqfNGdgldO1eqoLsqA0
lNQeEsnAkVGZtzfxUgDiK959fMvAhY7ivrr8FLg9Q7rq1c3A7/VT9tgJUmB1
YafTrwEGpnJd6EoXpkD3IfGfJVMM/CoplGudFAXkp44jHQkmFs+z9lpRpsCX
nYyNKXZMrMfs1JDaRoHp/Ky0L65MfMrtCLumCgXeKH0LkDzNxPU0w5tnd1GA
zAX7jkQysUuFRtvoHgqIS0xoNN5g4vuN4js/m1AgpKOo62kPE3/KT1mdM6XA
o2C58mf9TMwaL/hWzIwCJZ0WniXfmdjiEKfbUUsin5QZ+73EfXa5c/baS3sK
SJUuBJ4VQNjoR+fiYx8KqGwUXN+lg3DUlqSIcj8KZMm8Hd24F+GH/kb/igIo
0L6njMXaEGHp1XqWm8EUSLiY3pJkhvC4RCE3M5oCy2RBVRl3hOXsnS5ExFJA
ryvi2P/v6zZ3pPiDmBSYcbO/4E/c55+rXFl36jwFGuWiN0SEIJxmFCpumkQB
rQ9uZ0oS/v+8Zud1w2QKcEyQKloSEV7t+kPWT6XAf1JKw++TET7p7Cyjlk6B
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
B3nWqs0=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.06274509803921569, 0.48627450980392156`, 0.2549019607843137]], 
        LineBox[CompressedData["
1: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
sTe9P8Fljf8H/hJ1IQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
1t56Z8+y8lq4217A8///f/4PVKerHg==
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 4 Pi}, {-639.3746765932787, 639.3745902678594}}, {{
        0, 12.566370614359172`}, {-639.3746765932787, 639.3745902678594}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(ab\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(bc\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(ca\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], RoundingRadius -> 0, StripOnInput -> False], 
        TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.04183006535947713, 0.3241830065359477, 
                    0.16993464052287582`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.06274509803921569, 0.48627450980392156, \
0.2549019607843137]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 0, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7755140427798204`*^9, 3.77551404312302*^9}, 
   3.775516217879034*^9, 3.77551888018404*^9}]
}, Open  ]],

Cell["\:4e09\:76f8\:76f8\:7535\:538b\:77e9\:9635\:8868\:793a", "TextIndent",
 CellChangeTimes->{{3.7755140796772203`*^9, 3.775514087114021*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ABC", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "ua", "}"}], ",", 
     RowBox[{"{", "ub", "}"}], ",", 
     RowBox[{"{", "uc", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "ABC", "]"}]}], "Code",
 CellChangeTimes->{3.775514100010821*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"300", " ", 
       SqrtBox["2"], " ", 
       RowBox[{"Cos", "[", "wt", "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "220"}], " ", 
       SqrtBox["2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "wt"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "50"}], " ", 
       SqrtBox["2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "wt"}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7755162179102345`*^9, 3.7755188802260404`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7754579430278*^9, 3.7755139487166195`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.746328827023033*^9, {3.7482310966524534`*^9, 3.7482311064732533`*^9}, {
   3.775450767467*^9, 3.7754508648780003`*^9}, {3.775450912217*^9, 
   3.775450918182*^9}, {3.7754513991204*^9, 3.7754514086954*^9}, {
   3.7754515038784*^9, 3.7754515039884*^9}, 3.7754515609994*^9, {
   3.7754515955903997`*^9, 3.7754516114954*^9}, {3.7754518010654*^9, 
   3.7754518057284*^9}, {3.7754518460973997`*^9, 3.7754518642934*^9}, {
   3.7754520289284*^9, 3.7754520371644*^9}, {3.7754526269354*^9, 
   3.7754527555453997`*^9}, {3.7754531109964*^9, 3.7754531353164*^9}, {
   3.7754531701554003`*^9, 3.7754531806404*^9}, {3.7754532201844*^9, 
   3.7754533154544*^9}, {3.7754533567464*^9, 3.7754534176544*^9}, {
   3.7754534500404*^9, 3.7754534504664*^9}, {3.7754534922004004`*^9, 
   3.7754535162824*^9}, {3.7754535613394003`*^9, 3.7754536235934*^9}, {
   3.7754538937574*^9, 3.7754539001703997`*^9}, {3.7754553299684*^9, 
   3.7754553680024*^9}, 3.7754583969734*^9, 3.775460375528*^9, 
   3.7755139866648197`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7754539420764*^9, 3.7754539811614*^9}, {
   3.7754553755014*^9, 3.7754554098934*^9}, 3.7754584009494*^9, 
   3.7754603793620005`*^9, 3.7755140259258204`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7463299795372405`*^9, 3.7463299866864405`*^9}, {
   3.7754560882564*^9, 3.7754560914884*^9}, 3.775514094039221*^9}],

Cell[TextData[StyleBox["2\:3001\:4e09\:76f8\:9759\:6b62\:5750\:6807\:7cfbABC-\
\:4e24\:76f8\:9759\:6b62\:5750\:6807\:7cfb\[Alpha]\[Beta]", "Section",
 FontFamily->"\:5fae\:8f6f\:96c5\:9ed1"]], "Chapter",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.742780144200813*^9, 3.7427801599318132`*^9}, {
   3.742780308154214*^9, 3.7427803199792137`*^9}, {3.742780366075014*^9, 
   3.7427803982870145`*^9}, {3.7428120182355947`*^9, 
   3.7428120193762302`*^9}, {3.7428121244607353`*^9, 
   3.7428122133979993`*^9}, {3.7428123183039846`*^9, 3.742812322819599*^9}, 
   3.7428148157420692`*^9, {3.746328899977234*^9, 3.7463289187548337`*^9}, 
   3.7463296677892385`*^9}],

Cell["Clark\:53d8\:6362\:5c31\:662f\:4e09\:76f8\:9759\:6b62\:5750\:6807\:7cfb\
ABC\:5230\:4e24\:76f8\:9759\:6b62\:5750\:6807\:7cfb\[Alpha]\[Beta]\:7684\:53d8\
\:6362", "TextIndent",
 CellChangeTimes->{{3.775514123506621*^9, 3.7755141966958213`*^9}, {
  3.7755143333402224`*^9, 3.7755143343114223`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
alVZWdmU7eOUUMdPN245H1Vr6OmmZBCD9mzc+OkJ9xL+jZ91nC56WnitflLY
35RwJmPAMCBmdHQ0JiYGsh6j3JjFeIKQbTGsN8pkMu/YJqnyO/Xtp5/st7vk
llDSCYFBw8tLC9z07bFLl04e+dT5ikurZFI/0lmfExTMkA71ZdudKZcaOpfq
dDoajRYSEpKTk7P4G7MYTxCyLUKhMD4+/o4JWpU91w45bPjYtZBxO2MZbnA7
bb/jTNWN7hsD2V5On++sGpvUjvY1hez5eNMXX/lHtoomb3c+VSgUeXl5fn5+
HR0dixx6jPEEIdvS0tLy3nvv1dTU3Pp5oOjgnrc2v7LlwuFjx0LyKm9kLaom
933OW4/W3Gxu6PrTIvzW7ykWwbfjXUR/B5erjVMnkR8YGEhMTIyIiFjkKuoY
TxCyLZDpHDt2jE6/tT4gN/nTbaf3HTrt77vv438++/IutzLJ5FjhAadTHyTd
mtWIT/Lw3PdcRNcMZULWQyaTvby8KioqFpP1YDxByLaIRKLc3Fw+3zA/mzh3
93qPvZ51N/qf6+lOr73z0ReJrO7sb64c/qLk1ghkXqmn596XY2dZs08ul5eU
lPj6+vb39y+4bhhPELItPT09hw4dotPpN3/qSnjpsPu5CsNQYV2T47v2Ow9W
N9Qddzu5KeXWHVtBhafPXdonWq1WqVQqFIrx8XGIUUKhkEgk2tnZJSUlwfaF
1Q3jCUK2pbW1df369TU1hvmohZlbPnC/mt5neK07/KC366X2IbbPUect9uSb
92cVnQneju9vLxi6sxBIamg0Wn5+fkZGRmRkpJubm4ODw/79+7du3Wpvb9/e
3r6wHrMYTxCyLXw+PywsjM1mG37siVm3bZvD9bYb34/Gu1w+6ZsvmhxrcD5j
9+WluhsPa5hFLmd2763/4fo10CZxd3d/5513Vq9e/fTTT//ud7978sknt23b
FhERAYUHBQUtbLwhxhOEbAskJsnJyd+vh87Nt3t3w78/PnXtmsf5zUdDPKtu
9F5Ts1IT/N4/dO7aNe8LZyMD01lTWhtyudzb2/sPf/iDYUW/X/7ylx999FFp
aalOp+NwOOfPnyeRSDMu8Hd3GE8Qsi3TxxerO73O735jzZq1x4Ozube3ytpz
r36yZs1nxy5Tp8+aBLGCQCDAtQ/B5Pe///3evXshgBhyHJlMVlRU5Ozs3Nvb
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
y/Xr13H6NYTQ3Dk7O0/pqDYyMlJQUBAZGYm9YRFC87Ju3bqzZ8/euYVKpbq6
uuJ6fwih+crKyqqtrb39Y19fX1RUVFxcHI/Hs2CtEEK26M7xxTqdjkgk+vr6
0mg0nH4NITRfn376qaOjo1wuh+87OjoCAwNzcnLGxsYsXS+EkO1xcXFxdXXN
zMxMT0/39/cPDg6GlGdeJei1aoXmh40ZlVyjndSqVWqtBls5CC0fZDI5ICBg
06ZNTzzxxBtvvOHn58fj8eaX7Ggl/eWxp/bEkliyW/1oVROtme6xeVW947op
BfFJnmEhnkS8N4PQUhQZGblu3bqVK1euWLHinnvu2bx5c3V19Tw72MvF+Sf/
+us/bI1pHr31REhddflISA6Jo5y6q7g+OiMtunbIOJVHCFmVkydP3nfffT/9
6U8hntx7770ffvhhfX39vNonOo2enx3gfva1p76MrR40RJC+zOCClu4hHPaD
0LISExPz2GOPQTD59a9//cUXXxAIBIlEMp8C9EqFICcgvZset3PNx75E1o0b
u6LswJzWjoEp3Vf0cnZVWGJ2UhNOj4/Q0pSYmPjEE0/83//935EjR+h0uk6n
m2cBKvlQSUBCh2iUV3369Tedc+njen1tZBq9lz114mq9osr5g917d6fhwoII
LU0HDx6E9omjo+PcVwn8AfXEGDksonF0XD05QXF9/VX7+LrB5rRcWm+/fNq+
4iIHF0/npAWdByFk/T766KPt27cLBIKFHa6bGGuLCq4QjN9ojCg7o955bY+n
j3MEhcubPpBwovrCGZ8Lce040xtCS1FdXZ2Li8vM81HPSK+a6EkKLBaMGxoj
em7W5/9a8+99wW3D09cjlTV6Hwu84lEv1aumN10QQjZNLpeHhIS0tLQsuAS9
UkAvcNl6ubRf/N2t1yHikRf2BxX03GqdTPTmXA/yjCymDekn++J3HDu0za9S
JJOP39pbLRWLxDeaNvO+a4MQsh56vb66uhraJ+Pj47Pv/WOFSPtrEz3OJ9T2
SW4/GR6n5tb3D44Z4oOSU3bpxK7337OPqBdMiCrjQ9yuZrUKFfCKbkzIZ9K6
uNze5g4mo5uPI5kRslFarba/vz85OXm+XevnSyKRjXSX16VnN7D4d44IUg11
ktLirxM6IPEZHOilNPSbtBoIIdOBNkl2djadTjf9RNO6jrhvz7s4pLcJx75/
fCxrSYmLCUzpMfG5EUKmplaru7q6iouLh4eHzXTKdq/YzIzS758gdaUGRPr4
UM10doSQaej1eoFAkJ+fz2AwzDDDiWKwqa6sqCgjMKaSThPf3swri4ny8Szi
jcsVUsmYVIE3YxGyRZDpNDU1kclkqVRqhtMNlu7fvvZvf9t1Lav/Bzdcpe0V
eenJJZ2cAUZHK1M4bdQgQsjaabVaaJZkZWVxOBzznHGmFpBOpVXJ1dg0Qcg2
DQ4OVlZW1tXVyWTTe5shhNBcyeVyOp1eWlo6Ojpq6boghGyYXq/v7e0lEont
7e1qNY6fQQgtnFgshkynrKwM1/tDCC0GNEioVCoEkwUPIkYIIQOhUFhaWkom
k5VKfDCLEFo4iCEkEgmSncWM+0MIIb1ez+Pxqquru7u75z+RI0IIfU8qlWZm
ZlZVVSkUCkvXBSFkw1QqVWNjY3l5Oa5sjtAypJkYZNJaGDyR7GZPdf3iEhSJ
RFJQUIAdThBabtT9xHDHCyFZtR1sPo9ZEWu37lhwYfe8lsH5oYmJicLCwpqa
GuwNi9Byop1oS7bb4xyaWtnJHZHrJrWK4d7re88n1bQsNBLo9fr+/v6cnBz4
aoZJCRBC1kGn7C+/unnDdpeq/juTEnl/n2hCstA0BTIdCCZ0Ol0ux4nkEVo2
FIJK//V/fulYZp/Repoplcqmpqb8/HzzTb+GELICSkG5y78eesYuh2u8jquD
g4OZmZmQ6Zh+bliEkBWRslLO/mblJ4HUUSMtFwEJDplMrqiowA4nCC034+wU
h0ce/jqyddwYfVd1Ol13d3d6evrQ0BD2hkVouVGLmsO2PvX04SzOHQ9hxtnN
zIFR2fyTFaFQWFRURKFQMJggtBxpldyG8F3bv9jjnVlBa+9qqyfmk+rqG3uF
4/Od812r1VKp1NTUVBxEjNAyph2sifePzCQ2UGjNlPLi2l7xQp4T9/X1FRYW
MhgMo9cPIWRz9FqNZqFpikwmq66uJhAIRq0RQmjZ0el09fX1CQkJOO4PIbRI
QqEwMzOzpKTE0hVBCNmqwcHBvLy8nJycsrKyhoYGfKaDEFoYiB7FxcVr1659
8sknv/766/T0dOwNixBaGKlUGhkZ+fTTT69YseJnP/vZRx991NraaulKIYRs
Eo/HO3Xq1K9+9SuIJ/feey/Ek5qaGktXCiFkk1paWt555x0IJg888MDWrVsJ
BAJOTYAQWpiysrJVq1Y9+OCDdnZ2zc3NGEwQQguj0WgyMzP/85//nDlzhslk
4pMdhNCCSSSSqqqq7Oxs7F2PEFqk8fFxgUAgk8ksXRGEEEIIIYTQsvb/A6k1
K/w=
    "], {{0, 367}, {368, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{368, 367},
  PlotRange->{{0, 368}, {0, 367}}]], "Graphics",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.775514285744422*^9, 3.775514299164022*^9}, {
  3.7755143382274227`*^9, 3.7755143387296224`*^9}, {3.775514406206623*^9, 
  3.775514434679423*^9}}],

Cell[TextData[StyleBox["",
 FontFamily->"\:5fae\:8f6f\:96c5\:9ed1",
 FontSize->14,
 FontWeight->"Plain"]], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.742812748334158*^9, 3.742812757677882*^9}, {
   3.7428146944298873`*^9, 3.742814697070493*^9}, {3.7428148157576947`*^9, 
   3.7428148526638536`*^9}, 3.7463289267066336`*^9, {3.746328962460434*^9, 
   3.746328976682234*^9}, {3.746329467885437*^9, 3.7463295007944374`*^9}, 
   3.7463296711326385`*^9, {3.7463297016240387`*^9, 3.746329711993839*^9}, {
   3.7463297428768387`*^9, 3.746329767828439*^9}, {3.74632982605184*^9, 
   3.7463298631630397`*^9}, {3.74632990944984*^9, 3.7463299128162403`*^9}, {
   3.746330076424641*^9, 3.746330077787841*^9}, {3.746330929301447*^9, 
   3.7463309458574467`*^9}, {3.747175063997803*^9, 3.747175066063403*^9}, {
   3.7754543716904*^9, 3.7754544069714003`*^9}, {3.775514115542821*^9, 
   3.775514115732021*^9}, {3.7755141998866215`*^9, 3.7755142242208214`*^9}, {
   3.7755142569530215`*^9, 3.7755142825918217`*^9}, {3.775514317990822*^9, 
   3.775514324886822*^9}, {3.775514411957823*^9, 3.7755144138192225`*^9}, {
   3.7755145176594234`*^9, 3.7755145276884236`*^9}}],

Cell[TextData[{
 "Clark\:53d8\:6362\:6709\:7b49\:529f\:7387\:53d8\:6362\:548c\:7b49\:5e45\
\:503c\:53d8\:6362\:ff0c\:4e8c\:8005\:53ea\:662f\:7cfb\:6570\:4e0d\:540c\:ff0c\
\:4ee5\:4e0b\:662f\:7b49\:5e45\:503c\:53d8\:6362\n",
 StyleBox[" ",
  FontFamily->"\:5fae\:8f6f\:96c5\:9ed1",
  FontSize->14,
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"[", GridBox[{
       {"\[Alpha]"},
       {"\[Beta]"}
      }], "]"}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["2", "3"], "[", GridBox[{
        {"1", 
         RowBox[{"-", 
          FractionBox["1", "2"]}], 
         RowBox[{"-", 
          FractionBox["1", "2"]}]},
        {"0", 
         FractionBox[
          SqrtBox["3"], "2"], 
         RowBox[{"-", 
          FractionBox[
           SqrtBox["3"], "2"]}]}
       }], "]"}], "[", GridBox[{
       {"a"},
       {"b"},
       {"c"}
      }], "]"}]}], TraditionalForm]]]
}], "TextIndent",
 CellChangeTimes->{{3.775514457243823*^9, 3.7755145140770235`*^9}, 
   3.775514721918825*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ABC2AB", "=", 
   RowBox[{
    RowBox[{"2", "/", "3"}], "*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], ",", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sqrt", "[", "3", "]"}]}], "/", "2"}]}], "}"}]}], "}"}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "ABC2AB", "]"}]}], "Code",
 CellChangeTimes->{3.7755145533746233`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["2", "3"], 
      RowBox[{"-", 
       FractionBox["1", "3"]}], 
      RowBox[{"-", 
       FractionBox["1", "3"]}]},
     {"0", 
      FractionBox["1", 
       SqrtBox["3"]], 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["3"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7755162179882345`*^9, 3.77551888030204*^9}]
}, Open  ]],

Cell["\:901a\:8fc7Clark\:53d8\:6362\:4eceABC\:5750\:6807\:7cfb\:53d8\:6362\
\:5230\[Alpha]\[Beta]\:5750\:6807\:7cfb", "TextIndent",
 CellChangeTimes->{{3.7755145694914236`*^9, 3.775514605445224*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"AB", "=", 
   RowBox[{"ABC2AB", ".", "ABC"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "AB", "]"}]}], "Code",
 CellChangeTimes->{3.7755146191134243`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"200", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Cos", "[", "wt", "]"}]}], "+", 
       RowBox[{
        FractionBox["220", "3"], " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          FractionBox["\[Pi]", "6"], "-", "wt"}], "]"}]}], "+", 
       RowBox[{
        FractionBox["50", "3"], " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          FractionBox["\[Pi]", "6"], "+", "wt"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "220"}], " ", 
        SqrtBox[
         FractionBox["2", "3"]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          FractionBox["\[Pi]", "6"], "-", "wt"}], "]"}]}], "+", 
       RowBox[{"50", " ", 
        SqrtBox[
         FractionBox["2", "3"]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          FractionBox["\[Pi]", "6"], "+", "wt"}], "]"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.775516218019434*^9, 3.7755188803250403`*^9}]
}, Open  ]],

Cell["\[Alpha]\[Beta]\:6ce2\:5f62\:5982\:4e0b", "TextIndent",
 CellChangeTimes->{{3.775514648527624*^9, 3.775514658517824*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ualpha", "=", 
   RowBox[{"AB", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ubeta", "=", 
   RowBox[{"AB", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ualpha", ",", "ubeta"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"wt", ",", "0", ",", 
     RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(u\), \(\[Alpha]\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(u\), \(\[Beta]\)]\)\>\""}], "}"}], ",", 
      RowBox[{"LegendFunction", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Framed", "[", 
          RowBox[{"#", ",", 
           RowBox[{"RoundingRadius", "\[Rule]", "0"}]}], "]"}], "&"}], 
        ")"}]}], ",", 
      RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", 
      RowBox[{"{", 
       RowBox[{"RGBColor", "[", "\"\<#107c41\>\"", "]"}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "Code",
 CellChangeTimes->{3.7755146813098245`*^9, 3.7755188695020404`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.06274509803921569, 0.48627450980392156`, 0.2549019607843137]], 
        LineBox[CompressedData["
1:eJwV13k8FO8fAPB1VEJid1ZucnSgKJUjPJ8kqaTcd4TdnZGQouQokqSS5EpK
SvLtljvi6ZCj8vUtSREdEipKbnb95vfXvt6vZ2af43PMzGLfYHuOMIPBuC3E
YPz/V6RWvPnr2ljz6OxKziM3O6zVX7Ne5bw3yuO7RutZ2OGp+3r+71ODUfi7
qt2XtO3wN4KcKEs9gpJ+19wInN6JP1jFP7meehb5+WU1vs/Zid96py69lJqL
1jSnfOx9tAPbB8p/yEq9hxpyhBIuYBt8btizOCO1Fn0YNDF7VGSF19dtFbfY
34JWSW6qT8hYjUMO2+4uDmlHno9U1G5NK8DeCk6ysMYntJpYPXYvEkFr35b5
N3x7kPgjz6+DX2wgSW+MUebWh4SrGmYy3Rxhn05DOr7+E3XKTUIgxx2m/Pbc
/Rj0G3Vfd4153eUNvo+cd6Zwh1HWlMa3QDNf8PvTinHiCIr/UZW2Ya8/+BxO
calIGUHXS2sHHh/wB08Rm8F7WSPIP9h2pVmUPziznyrmFo6gPr+r4Zqn/MHa
uCg8umEEfW+Jay8t9IeVsWd0TcRGke7gBusvX/xhQtoqq/jEKMo0uO/g5MCB
0/rlwQUJY0iclDWz1ORC0+p3vWHJY+hQlYqCgzYXxNaOe23KGEOX5ojc89Tn
QryxoU3P9TFkdDZ3ytuUC5EW5cvU68aQ9jm9P0scuRDgWP75ksg4staQUCuN
48LmQ+UO6UfH0Z9bpwYaOuj7D79r8k8cR3+3LGLqfubCk6jxDWtSxtGKsp91
J3u5YB5rqP8mdxxN9bm+WvOHC+uSyiVlasfRnWVVhlvm8kAzp7zuNH8cVc5j
+QXo8UAYlxvGH55AtUXOOcejeXBzAbOAHzeBnOOWdV2K44G9RyBx8NQEMu/J
PnHvBA+ujan9oXImUJVCsUTtOR5Yrki6uaNmAunbORUlX+dBQransqLwJNpy
+4LZ0AseiIcJiTw4OYmaXP+wb7NIePDEY59O6iRqTLl8d3ARCe7SZd352ZMo
1Gn+cW0lEm7dCqjOvDWJWszces9okmDz5U1Y9KtJ1PBTzl1kLQnJOwr6rGWm
UB9r/txCRxJktLc1d2dNIVFO7JuWZBJ65+XKNFyZQhI3I9sE50h4+G3Y8X7h
FGruMni/JJ0E/7zsjqMVUyhMp+mD/0USKuQG+ha3T6GgOU6VWTdI2DXvpIj/
omm0+t4P8+4aEgy+dVrZqE6j+3URPbcfkyD2VD9pzdJppJOjFnPgGb2fmHbp
OYbTSKpF+NSfRhLmjC1VKXCeRtPzD0xcbSXhds9zo770adRY8/Dclz4SYp8o
RLVcmkb7nC5o7/hBgvOVoNqK69PI9RjnTukvEhieslYnS6eRR0NwUMgwCQ5v
OA7ab6dRthlqzpkmYeqxaFAgMYPuS28+2SJJwb+5rkWOSjPo1O7e6A4pCvKj
b4+Yas6gf649c/gkTYGtsWPkgjUz6NMZq7x3BAV5968l3nWYQRrVQ6VRShRY
51pc+506g1qXIe8r2hScaGj5GHdxBv3YnHs+UJeC5392ybHzZ5DhppzkVSsp
2GQZeca4dAYd/Mttu76KAov+4oNx72bQ97GTuYZGFMQyLR4Qn2ZQudeC6UZj
CvD6lp8FfTMosN5F3mk9BSj55+4XkzNIdXlMjpM5BaYGWjaEEh9Fr1pRNLuR
gkjP4oQCTT4yWDUm67qJgofHNzw2WsFH5TZrTf+xosC43WudlzkflfSnPV27
hYJ10RlqBT58tPFtfdX4dgrCCjQ9jCg+MjFdzJLdQUHJvw/Sm/bx0dz5WktX
7KTAQP1f8aE4Ptpw9texTfYU6NfPGzW8zkfVKzeKqTpTEPw7Xa/pDh9ZS101
FXGh4K68ZoBnGR8tE+bofKK9IhC6j9bzUUieomG8GwWB6c3yrBY++vs4w2Gb
OwW3azwdr7fz0ZLP8cslPCjQlolobOzno76ZbkaYJwWUyTxRz2E+ylL/JqTq
RUGhX7r54BQf7bpwpuox7aVlRcVMSQFSfL7Q9c8uCrjdaDCfECBlj1STGG8K
CsSalxkqC5Dz7Py3Ij4UaHoMXPJYKUDBehtWTdL2iz/U/mudADXaPRwmd1Nw
9c5c1lEkQNz7F/f8R/tLW9p2prUALdtZf3G1LwWLGRqJ+TsFiNi++Nhp2j7L
i56scxMglw9nF3fTvmKP+A27BcjWYjpc24+C7shXhh4BApTUu/1YEG2V6x6h
v0IFqAMdsLpF26u5//aRSAHa0eWJP9HOGT/4XSZegBA18VvKn4IOtbnq+afp
/8s1bl9LW2Frmue6dAHa68wOd6Lttl89s+GSAH2OjGvaSzsr5/5/7gUCtJE4
/DaGdnudueSvuwJ0bP14RiLtRUMvrY6UC1C/5rjUqf9ff652d38tfX1bnX8C
bbk1D6IcGgRoztWiksP/H2/Lz3zUIkAPnz4S8P4/HpH5YOl7+jzIIQvb/48r
Jr0691mA3O9sj11BW74mqm+6X4CSr36unEM72ydYhDssQJbWZT/b6P0piPiq
tEwJkG5Ku3we7ezrjsYmIrNopZfLBn/aitabHfMlZtGuYxv91P5/HgPGwVLE
LJquv3fkLX2+Smd0kw4pzSLe5/sZx2jn6Kle/6I5i5Ye9CrUpq38WgbbrJhF
bYubS5ro+KksGh9VM59Fda94NaN0vC9X9kufsppFkaUvqo7SVvXs1Bm1nUUT
MVSJKG21vMe7G71n0buuj5njdD5d2VgSZUDOIsOvgjgu7cW9BZmXQmaR1fVB
qpnOP3Wd06/2xc4i38wenZN0vl59FdPXcXIW3aqynNdJ57NGyD4Rq9RZJJaw
tHspbc1SZ2OFa7PIzcb8+E26HpagxdefPJtFFqOX7nvQ9VTwmYV1X82iPIm/
YeFO9Hj83I6Mt7PIteiscZIjne+NP6T39M4i0ZGC6hy6HtOWe9TMF2WAWuvP
yr22FLQebn1hLsaA13bSETvp+iZebn+/X5IB9durjXRtKEgPgpGPBAMchf4+
bKb7QUaxlvYDLQYUhem21lpS0Caaa/h9OQO0Dr67EkD3F1lnuU1KKxlw4ml9
iJQFBZkT4j4J6xig5D2tuAHR8Tf7ne6+mQEbq+/ftKf7V3b9QyERigH69g/n
LaX74e9P9yOGAhnw4+jQ6FG6X26eKvjTEcIAuwPeba3LKBjRPf+55BADtkuf
CQ7Qovtv6p7H3EQGuO6rkdquQoGwl1Js0w0G3Jhn4vub7teu4czJslsMuBaT
cqOf7uf3zortu3aPAednUW+nOAWeT0Z8osoZ8OZIvl3RXArKlr6ClfUMWGZ2
Z1BGQMKe4WhGai8DbJ1elD+gnydPJA4cihlggNUXsf+29ZMgpxXwO2CQAXub
9X929ZLw3MX508Yxej35Gdp/P5Og9mglHp0jBJ3Se9rfvCOh9UT3ETctIThx
Kywu/AkJpsobZtX8hejntNedTedJsPZsDfUl6esXrXrXcZYEx4u83muBQqCU
fHfBntP0euSTXy0JEwK5ytP5B46TkM3uuKibIAR37qalrzlIwsSCMCOjQiGo
yTekSDcSSgSF+3b8FAKNOfE+N+RIwGam31J+C0EY02vZboKEl1H/ur4eEQLr
2hZVQpqEr1OjyIkvBC265FXOPBKY4xZSHlLCkJnXI1c+yoOQoc6bXH1haBJ5
+Y34jwc6n6R7og8Iw7dfh43r6PcZ2+9qT8IPCcP2ulO/BPT7Tsig/pXgKGF4
ZDLTtjqCByUzOz13xwvDcHiF7clgHpjKn2u1TBMG6W3sv789eGBjL1MnUSIM
A7ufqt424EHgM5mCC3/p+bW2tX3o4sKdQiZZGioCt51EH/rT74Pxb2s3iBwU
ge8iz8OKlLngKbxX0S5SBEzTS5vGZbkg7lnf/POYCKTm9W/eN58L3IVRazXT
ReBZ4cXniwY5oBb+Tfh8uQhUxfakrinjQNrGikshMyKQE/m5pGoDB6K6vN7o
JIjC24QH+w9Z+cPIZrNLnCRRiDu8lPQ194fAIiVebrIoGDgUllmt8weP+I4p
ZqYoVHZ0BAi0/MFE20196oYotHrUBWvP8YfJMMd9DY2ioHj54mD4Ez8IX7Bt
IWfBHAhk7Fo+bOQH+0yNtl1OmwMXYq1aJ9m+MJVr6fsjZS582HWz2jPeG1pC
sn0OXp0HWgqpqd2DbmC8WV3wMU8M3Ndp8vttHKFxk3Eh5MyHZU/PtiT+sYHr
RReMv9wSh7GP/XeariBga+gG7PpHAq4k7tBP3K8Ar4XE4uSrJSGR36jcd2EN
LhXbX9DSuACOrChYLxa5GeuypQN866TA7n6lQXmJHR5KHiMM2haC2BBKnOpy
wRonTugFB0jDoScEwUZe+It7xweL79Lwacvyh/z5u7H1tzeTpUEyIGaSapzi
7YejdZIj74XIQK9pvX8hzw8/2GfNLwyVgQpd77dVwX5YUVDNyAmXgYzr72Na
j/jhQdmCeXExMtAUuaT6Za4fTrM+xLZNlgHo9VjxrssPf7qltKr3jgxIjD04
Z+Xmjw+FckjZXzKg+cY9aRni4MRtgzyTIRlQvlCRmmHFwZmaB3m7/siA+jfT
Y4LtHFzWlsgtGJWBRz3mRLUnB/81ue2/TiAD4w4GVb8iODhI5K+P80ImJGZP
bF1ezMF+aUfdMlYx4f7pF+ivGheH7p3v9tCACb12Gg7ZS7k4zirVtWstEx6E
60utX8nFVyauuSwxYULgdOt+aj0Xd3nWO5VZMMG9/HxDhBMXu2pJ2bc5MKGz
fPsEN5GLbcsubpUNZ8JY3fFWbj8Xk399Z9mHmGD+oD+wc5CLj+lrl7APM2Ht
803bbEa4uOJmhTI7hgl6yRGtCrNcrJ779jcrgQm7JrT+hhI8PHZiYaZMBhOM
JqaNpMx5+LLbsa+SZUxYqPbs1/fTPFyRsTVLsoIJc03u1F47x8Nv3shsl3zI
BGZO3123DB4Ws71SJlHDBIbmtU/FuTwcavHopPhzJvyrnhay+AEPW+mM64m1
MUHeId/i01seHpwJiBIZY4LzBsvZHjkSu7luWz45zoTirSvcm5VI/KxYp21w
kgmc7Ud+FKmR+ELAT70PfCYUtly7w1tGYsv2vV/vz2GB2D2NjDOGJL5YHLJ1
F5sFA5TRyieOJJ670G7cYREL/vF5GGfrSuKQgFX5W+RZ4LTDa7bVg8RWi4f5
a5RZoDTv+t4WXxIPJ+8vktBiwWGNr3NjQ0hsHRAuV7mGBTsK/4Q1JJG4uM65
7u46FpQVSw6MnSGxymLD0HwjFkhV8CJUz5H477vxF2dNWRDb3Na7K5PElzdF
HOFasqArtOJ7xjUSj6hF9bIcWWDYo9098JDEee9iS4L2s8DyfFyn8jcS99bp
dyeHseCIxr9TT76TWLeke/69gyzou50lvXuAxGUpZt5DkSy4+vCeauIQiV9u
mZwfEs+CHzEV5bGTJJ6oCvHel84Cbghzjbokhc1vqiady2TBjZ+tYc5SFD6W
1VxSdIEFgWf08o9JU1gqTFd8+BILoN34WQNBYY2VfSWhBSzIaB5gCJQobHvF
W/xAOQsuh537xdKlcFqy1Nq0Svo8pMOK21ZQ+H3UI++SKhaoRUh4pepR2N9N
sXSklgWuyV5uI6spHMF85x3WwII04939vsYUrmEkJKU3scDuZmbtTxMKiw6t
KS19yYLxjuawYFMKJ79IFR9rYYFQ0emj3ojC+fG2peHvWSC85I3IgCWFB0L5
3RkdLOCfTm42saKw3u7b4uUf6fjvlQ+P30zhh2biPuOfWdC7XsddeCuF/x2r
Ez80wALxiLOBhbYUJr4dWJv1kwXhf8QIvIPC7m80fCoGWaCfnZfespPCPfdi
SyeG6XjdFWh12lN4ijTziZhmQaNr1P5LzhTeWqUNYXwW1PzV27zXhcIXF8ip
7ZtlwUEx6e51rhQ2fTDcTYoQYPQyxb3cjcKnRT/V+s8hYMf312ZB7hT+6Pwq
12ceAbsd43tUPCgcM33D21WCAOfOxMi9nhRu3p6OHBcQsOSfk3skvCiseiVO
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
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-353.3647784594234, 353.3647705728662}}, {{
        0, 6.283185307179586}, {-353.3647784594234, 353.3647705728662}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(\[Alpha]\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(\[Beta]\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], RoundingRadius -> 0, StripOnInput -> False], 
        TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.04183006535947713, 0.3241830065359477, 
                    0.16993464052287582`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.06274509803921569, 0.48627450980392156, \
0.2549019607843137]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 0, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7755162181426344`*^9, 3.7755188804210405`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["3\:3001\:4e24\:76f8\:9759\:6b62\:5750\:6807\:7cfb\
\[Alpha]\[Beta]-\:4e24\:76f8\:65cb\:8f6c\:5750\:6807\:7cfbdq", "Section",
 FontFamily->"\:5fae\:8f6f\:96c5\:9ed1"]], "Chapter",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.7427799561262116`*^9, 3.742779977097612*^9}, 
   3.7427802878240137`*^9, 3.7428120798045993`*^9, 3.7428151768156633`*^9, {
   3.7463304346212435`*^9, 3.7463304728744435`*^9}, {3.746330559301444*^9, 
   3.746330559645644*^9}}],

Cell[TextData[{
 "\:4e24\:76f8\:9759\:6b62\:5750",
 StyleBox["\:6807\:7cfb\[Alpha]\[Beta]\:5230\:4e24\:76f8\:65cb\:8f6c\:5750\
\:6807\:7cfb\:7684\:53d8\:6362\:ff0c\[CurlyPhi]\:662fd\:8f74\:548c\[Alpha]\
\:8f74\:4e4b\:95f4\:7684\:5939\:89d2",
  FontFamily->"\:5b8b\:4f53",
  FontSize->16]
}], "TextIndent",
 CellChangeTimes->{{3.775514745573425*^9, 3.7755147616316247`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
PCqD23NzcxEzX7e9Avm/YMGC3bt3M0JGXA1dU/DsDiRnIoCBBJixyRPek0Oa
doGXeC6zThiaUSMbtI7W85lVcmZ6XMjlcqRKqVTihVAolEgkXhy9CG/U1dWl
pKR0dHRcNx5ua2vDX0tKSphfTSZTUlJScXGxtxIQwJCc3cThcOA6xxXOPMhm
QOxRX1/v26U3iDHo7OysqqrCOZrY5e1C3JyRwi0RGoYt3bKYBGG/cbRHZT6X
M4RsGQEqlslkiGZRNiFaxqWLTGDak73YqiCVSjMyMpDDg4PXL68g59TUVETs
zJdiMz6fj1yiW+aGkJzdxG63i0SiTZs2LVu2bNWqVStXrly8ePHy5cujo6Nx
F9CVxk5sNhukhHo0HOLRY0EG57AiJT42euep3HNRaXHneSrj4Gh284mccXGa
zWaj0YgvRQSrVqu1Wi2CVcS0eAe3NuJVZIXXW3rxRfkjjNFpsLa2dtu2badP
n2by3zWyFC+iGgQ5Ezgj0wKSs5ugxEft7Le//e2tt976gx/84N/+7d/uuOOO
1157DVFBwE9x49cgdCwsLETo6HEB6nLaNPnns04ue/vtv70w60iuyjlGP90p
kzMsB98OjqDT6ZhJ7ZqamuA9vV6PN2FOvJi8Xlg4QGRsTk7O2OvOIEmnTp1C
dH3lNjgdeXl59FhwbEjOY8Bc/8gZhCUISM6fP/+HP/zhpptumjFjxg9/+MN3
3nkHuYdbgDrVsxnEkDweD8HzaPXuG+EccvQW5fLENeKO9nZ5u37s+2Sy5Xx5
WQoEqzKZjJnfCXJGBYGJmfGaEfKkrl6Bb6+pqSkoKEAAPPa3oNSIiorKzs6+
crPGxkY+n0/1zbG5oZxdl1ZKcTimU/2Duapx5SAkxqXF5XLLyspQO8M9vnXr
1nvuuefhhx/++uuvi4qKfLXcBuE+cDIEIhAI5HK5R2EkzrC1R2cecK9Tw2TL
Ge5FLIpjgYchZ7FYDCfjGBE/WK3WS3fq5LcVWCwWqVSKsBmOvWFkgpy/slmD
AW5nntpQD94xuKGc+2ui05PPpDVOFzvjauns7JRIJIhJcOXX1dVVjsD0O6qq
qlq5cmVwcDCkTcN2/AK4FbV7xGmlpaVTMGrP63IeGqGnp6erqwsHwgwVwWXZ
3d3NTEkEM0/lEm9IDFKCzIR13Rmfjpto//79qHVelUKUL5mZmdf2iyYuc0M5
W8QJRbkp+fIAjw9xK+GyR4iFaEQkEuHaQ2CMF8zIVmYOLhT9uBpxX+C68nV6
iXEAJ6MOzuFwpuAhnVfkjCsN1xsuNlx7CAnwAtECIgSmBQMxM970tJVmQkCw
+GpkJm4QjUbjzkdwsyQmJuJuulbOaWlpE5czU8kNyGeLN25zHjLZB03mQGxV
RY0MdxAuNgQhzEKceXl5CEugaIgatUXcCNfW2gLyMghsUBtCNRxym4JVuT2W
M64r+7cYDAZcfqidwcn4yfTBwCHgWvVtOy1SAjPn5uaiIulmzRGHcOTIkYSE
hKvkzLQZTnweJBRSTPkVeA2MY8rZNWxTNwpbGpv7Rr8gBlVFOdmxsfHZNVWd
354s3UVufnJsbNyFYoH0m72ae8rzsvNryuV6e2+nyeX01RV25TM+RCC1tbXF
xcW4bSHnhoYGVMEUCgU9Gw0wIDStVgtLQCyT3bVmvHJmhlQjhUajsXMEphIn
HaGxsZHpn8xsOakpvyG4ZXB0CGD4fL779whi7IULF+7Zs+faqMZiseCMuBmB
jwZib5zZrq6uwHu8OKacHcMdF7asCdl0UnzdpiWn3dTfeib0D0/9/oEH7vnV
K2/vzlQO4jLrl6etf+/lXz/wwP2/eH7WV9GN/QNDTmtV6odvvvhm0Btrz8QG
h1VbrxxgNeToUzc1dfQa+7vl0gaJTKGyeL0xl6n7oKzHlY/AWCQSMU3K1dXV
JSUlUDROsXc75xOsAqcecVpmZuZkz7E8LjkjVcy6e6ijQS+QDGzMLAKFaJCJ
oq+d0N4nIEBFBhYWFgoEAkjV/Q/iRtu5c2d0dPS1ckZ5lJWVNcG1BRFiwf8y
mSzwngGNJWen1VWzb/Gu4+uy1NerybsMbXnJXz2+41hCkUxWfGTO5qD3kxr1
6pbszUdT4nIuymSSnJ2frHzsT8c4yl7JuXMJmUlZaXuWrn/2pdMlBvu3V5vL
YZHkHNn49AurjsZH7pzz6q/u/fUbS85VeG8eXFzYuK5Qe2IG9DFLD6P0Lygo
qK+vZxqTJ6N/PsEqYAYUyjk5OZO9ooQ7csYlhwAeakJIgO0RiMItkAyuUlTP
mYnuWRUHIjFtbW1FRUUeLC6DggbZjpvu2luMmQcJxSXzTNOztOHjuJdxX08v
OdvNqvjZOyNOnGu97nViUjVlHp63OV88sriVsVktrenskknTVs0Lqyhjair1
58KWv/nEkdI6wbnQT958f/72kwVtlUKtwfHtiTDVnD1z8OVVZ8LjSnKPHY6N
jzu0ZeaCJf+3s2rQPmFZQrm4/nEXoJKICDl7BNwIuMwQliA+GVcAQPg1uPdx
xuvq6lBdmtTHgqPJ+XLdDZGwXC5nljhkJiBiumHAVOx8nMF0d2Fm0VcqleP9
ONNbIzY29rpHh5uUabrxrDDCPvFZmB9lbuANNxhDzs6BruK1i6KjUurs151r
XN9RnbPv6cQqkf7vmW6ub4x+f368oIRZi8YoqMjZ9YcwoUillqdGJBxZt35T
6Po9orZvzOvqyj6ya/WG1VyNeVhVGVvZqhu2XPxk9/YnP88wWT2SM7PCDs44
xIuzVllZySyUgwqjVCpF7EQLMUxbcN6hQQ6Hgyth8r7lspwNBsPlN+EQXJC4
/BiNIJgUiUTNzc1+MbYUZsBBwcxNTU0ePI7h8XhBQUGHDx++rpzhZNyhQqHQ
s9XEEGUxOYmikJ1F20QYXc5DdnPNqfc2HdiefnHgumHsYG9N0sFfvbE1uWFk
GcsBS39bnbixJe3rTz88Gl06MuG2rkYUt3lXSXtHR7Oge6hvUFlzfPVn7204
LbWaUU46WlP27juwJ61n2DzYXZZWbdI5h+X7Vm7/aHmk1DbkkZx1Oh1qXqh/
QcuiEXBdIVSe5A6uQxZleSm3rEBmC7TrI7DQaDSJiYlQweR9RX19/ZcjIAzA
VQdpMO1peIEQsbCwEBV5P9IISrSGhgaUaIicryxu3AfHjrA5Pz9/NDkjW5BF
njVKILdzcnIQhvlRlrrP6HJ2OKwNOUdjY6N5Mr3dZXfY+rv1FlNnl9Zo/GbL
QU0lZ/8fPv545aaj586dPRpyIiW2WqNr5oS+/M6cv63dd+5c9OG94SdPVqu0
ZkH4thMnvwhPSwrfcfLE5hjJYB9OxUDuvqU7V2wSGAbNlsrsCnO/rOVM9Hs7
j60VjOvxLTNRbW1tLa4iqBiXQUZGRnl5OeqMUxUkuzpSg7ZtC9pSMciihkLi
GrRabUFBAYrsSWrRxW4RGyxatGjhwoW4FHFZIjDApVhaWso815jK0SITB4cD
72VlZXG5XI/bgpADaWlpyITRDhxeRUyFsmy8foayUCkuLi4ee3IP/2XsrnSu
oUv/hodtRnVHY2VZnbzmXCJP3HB5/VyXw8hNeHvmzAcefPDBP7+3tEh6KYds
xqLtH7/2G7z32KxFeysHhrCHlqK82I1vvfHEQ79+a9YhbgdzEmw1Zz/84MNX
1u07lxuzbt3p/PTTwW8cDjlS1H3jZDNzC+CkMItRovQ8ffp0amqqRCLB+1Pa
78LldA0P1Z/aELUvOEfr/lpzhA9AYc20PHt3GBEkhj3DLZBMQkLCrFmz/vrX
vyJIhnAQOeDO8tOnG7i5EOrweLyJLJmN0mrVqlUhISFjBLeIrFB+jauRBzd4
RUUFMhkSCMiwedjNiY8cjc0Xi+OymztlOSn5zeLWK8NR16Cms1N+ac1edc+3
ceOQsVetxHuKrp4+xsMOq82sU3cqWhWqrv5vHwe6bOrclate/c8f3XnX7f95
53/d+7d1p0tkZuMYbU84I8xdoNfrcUJxI8THx6NYZ3qHGo1Gz1quPMU1ZLUN
mo0DDmnS2sMnt6QE+jDKQAC2zM7OhnO8tUOz2YwqGxQklUqZido+/vjj+fPn
+/tEsijFEJci4sXNNZEaKNQQFxfH4XDGiJcQXaOi0dvb6+YXYVcI6bFPoVAY
wLNzuCXnfm4tJ3z7yTJ+ZmymWN3ixfXerW3K8gORexbPO5ITl1bboh0r3oWT
cUZQLU1JSUE529zcjPOOWwDFui+KziFDh5gXlyNq67HIzn2x7tDyiIZA68oT
iAwODubl5UGhE9xPR0cHIjeRSAR3MaNFEGcyq8p+8cUXLF/g1R1gy8zMTBza
BO3X3t6O0rCysnIMOSPfNBoNtnRnsg7sB1sinkfmo6oSqGHzsJtytmq0HQ28
ivrSqDOVSpUHi2WOgUsuac2JKRz9/CNIRvlYVFSE04EXKM1xU8DMvl16flDO
58cdOZPb2KofsHM3rAkJ3cKlcYV+AKLZlpaW6urq8a7KfWlyOquVGemPqBI7
KSkpwX4QG+DeuTxUxOcroXgFhLIownCjTbw/SU1NzaZNm06dOjV2buN0YEsU
cNetblweiWCxWOrr68vKyhgzB2RT82Xcn8/Z2dspyOK0dmu9Gh/q6/Lzz+5P
7Rz6h7XmmQUsEIRIJBLmXDBPJVBiTqS/utdwaqoTw/dtCeVZhnHBqc58HXku
gdPr40QRboJLvaqqCpXiGz6BgnKZwf5wMuwBGyCSzM/PVygUiA0gClyNV43g
CwA5d3V1IdYtLi72iv1g0d27d8fExIwtZ2i5trYWmXzlSUFpiEIQgRnSgzoy
zgLCM9R6sGVgx8wM7sp5yGrt7VK2qfRmu1dzRFPfKM7nqJlfcLWjdoPThIIb
cXJycnJubi4TqBgMBvyVLV2UVRfCQvYtOiG7VKAY6s6s2h0Vz+0cpqeBfgPk
jCv/uhV2ZgIipqs8omJcjTAGrkbEdajEMVOy4E+jWcvf5Yxkp6amImzGnegV
+yED4XnodGzPo5hj7n3mgT5+Rbanp6cvW7bs2Weffeedd2CD0tJSlIwoO2AD
v27PdxOfr4QC31oGBoxGIwzMDN5H/iNm7ujoQJyMGwEni20nwnUx9MC+rz+I
UvTpO7TVRz7+aM+OiLo+h4tdqSRGh7nSrpyv0vktuPFx4clHYOYnRNUe0QJc
wch8bMn4tZxR9FRXV6NO4cWnmaj5Hj9+HGq9oepxOnDjI89Ra87MzAwKCnru
uefuuOOOm2666b777ouKimLWVmabDSYPn8j58kxcAwODKAeFQgHuFBSLOI+4
a1BzRBmK0IW9MxH15p89tOXdZZF5JRw+79zyoMObQspbdfQ80G+AOVHd5vP5
zBMoWBdCwLWnGQEGwK+4MvEaZmZ6yrk5AZH/ypkZV56Tk4N88GIXiLKyskWL
Fu3du/eGckaEJhQKEWbHx8cvXrz4pz/96Yxv+fGPfxwTE8MMfvdWwtjP1MsZ
5whFJAwsEAhQVURZiTNSWVmJn93d3XAyTgHbC0enSduuqL/Y2qnt1Rt1siaV
vK3fQqMD/QdoFldgZGQkrkBmopWGhgamzRMXJ4RssVg8uxT9V86opTIr4Xo2
EnD420VbrnpTLBYfOHAgNjb2hkUbPsvMYhQREbFhwwZ46eWXX545cybi57ff
fjs3N9ezVPkvUyZnXOc9PT2omKBcxo2A2hOKSC6X29LSgnsB1wMLmy+IAKat
re3gwYPwAJyMqKBnBDgZF+pE2lr9VM5ILTNb47VjOiBVs9nMZBEzi+No9yn0
zkRcuM0vGx61D3j1urPSXQvyn5liHTtBtIZPFRUVpaWlpaamIqpnaT160phs
OTNPVXCCUCYiSEbRjNyWSCQdHR0qlQpn3E8HTxH+DqJl1JTXr1+fn58P+Xjr
xvdHOePw+Xx+Tk7OdZua4er29nZmmWMcHbNCED4y8C1MrxX8hNuDgoLmzJmz
Zs0ahMqwa1dXF4/HCwkJgV3dyWHUVlBoKhSKKxfhslqtiNym4by+kyHnS8/4
LBZmBTRUHsvLy1EU4kwxMTMbVtshCNzsCBVmz5599OhRXJDe2q3fyRkarK+v
z87OFolE190AckYchZC4qqoKRyeTyZj6L/OEiFlLq6mpCT937tz5yCOP3Hzz
zXfcccdLL730+eef79mzB8XfvHnzIiMj3VErtADzI5YzGo0B31PuhnhLzsx0
tdAy9oNTiSAZpxJCZl4wq1f7dtgIQVwFrszf/va3f/zjH7OysrxVg/MvOdvt
dlRpUUjV1NSMsWIsMxM1NoAzUZAxYxCQe7UjVFRUVFdX4+fq1avvu+++GTNm
3HTTTXfdddfvfvc7RNHLli3btGnT9cbLO6zmvr4Bu81qMPfr9EaLZUTGcAjq
2ojP/X2I5cTxipyZZamZcawoQ3HiSkpKUEuCk1GvYZYamVaPWQm/ANEgIr3v
f//7H374ISTjlYlZ/EjOuG1hWv4IWq3WzU9B1MgoBFqQp2kEg8GA1zje8PDw
l19++YEHHvjv//7vDz74YN++fQjI8/Lyzp8/X1ZWdlXkPNCUGLb2jRePZCVG
vPfVG7/+9aw1QWXf1F/kCgVODdTh5QP2NyYiZ/iW6Z+Mkk4ul3O53IyMDJTC
8DNOOqon+Cs5mWAtMMCvfvUrRHo/+tGPNm7ciNr6xKvSfiRn3J5isZgZfOeV
5lwYIDQ0NDIyEnFyQ0MD03qJDNm9e/dVawjqq8Iytr++JeTo/syEo6F7T27/
/P0/LHj74zzFSCr6tFokSa1WT+08ZqzDAznDtwiGsT2cjMubw+EwTwpaWloU
CgXKO2q+IHyBTlZQWsltcj/euixn8NRTTyUlJV05LMUz/EXOVqsVZsbtjyqD
V25YZiEwGPWqPtLNzc1hYWFpaWl/l/OAMiZsxV/WbqvudA3XZ2eKtTpXW8H8
4Pm/COO5RobZjkwIrNFoWJ6Hk8145Yycl0qlxSOgNoQzKxQKESpD1PSMj/Ap
XeVHI+LOFDe5/YHq6mpUwG+++eZf/OIXQUFBCDNQ3ZtgIvxCzohIJRJJampq
UVHRZHeXYpYGQ1ZfDs7NtXs2he74uHRwyKBXZHAa+yzD1vxzQRs/+7S41fXN
HAgGgwHBXltb2xgt4QGPm3JGDQUeRqSBa6+yspKZdBHnl81XIDHNcPW3qXu6
tO6PbUOYsWLFitmzZx88eBAXtleGxbFfzgii5HI5QlncxVOgPpFIFBwcHB0d
fVnObbGv7Nwz56RieMDSmVsgM6lV8pwdG44cOir4eyMGImfFCEajcbr1oLvM
GHJ2OBwIJJg5LhAeJ4xQVlaGopBakgmW4XRZtL06U//AOG5kaAoSQOCRmZmZ
kpLilQ517JezWq0uLy/ncrkTWd/EfSoqKpAbVy7w2pP57vvLXnztRLa4Kv7I
mcq6nNOfbTzwcXSt6YpTByEjvMfZmc5tpIycz58/fzlsYJqUUWB1dnZCxfA2
qj9NTU14BzUg1i7gTkxr7Lqu/OBdZ9NSmj1pW8NdgOAZleiJJ4TlcsZdjBSW
lpa2tLRMzTeiCKiurm5oaLj8jqM/P3LFa7/40d0PP/CTO+75xYNLDu0saZde
MxUxbAPt4IOerf0aAEC8V8q5r68PQXJycjKCZB6Px8wQpVKpaBwfwWZcA+q6
Y2+sORaZpPQkcigoKAgPD29ubp64B9gsZ9QU6uvrc3NzRSLRlM2lg1IAAV5e
Xt4VrRN2/UXumY1ff/LmpzsOHTlWKuu8Xq7DSCguoSNYKIDXohqD7OzsP//5
zzt27MApKy4urqysxIlDSVdTUwMtT/OuLISf4LIZpBmfLgyLKWjw6ILt6urK
zMzMyMjANT/BiiFr5Qw3wnIcDqe8vNyLIyJvSGFh4d/+9rfNmzf/Y8Zautvr
khOkY58uOLm9vd27s+T5BXq9Hke9Z8+el156acuWLbB0WVmZWCxG8DxtW+AJ
/8Ri7ORsfTci9oLU4wbKkpKSvXv38vn8CXY6YqeccVAogIqKimDm7m43lrf3
Hgh9d+3addVKKE51WQ3nzAmu2TCmnZFsrVaL+Hk6zK7vcDhQaLaPgAoOj8cL
Cgp68cUXIyIikAn2EahJmfAzhrp1ghOzN5wP43QMeXrxQsv79u2DuybYgYGF
ckas1dPTg0PD/T7BpbQ9QKVSoeCDoq8M+RxSfn1RWonWNfbzW2aqjZaWFtRo
ArJPHfIEx4WiByFxR0cHLsKsrKyCggKEzXgTWp41a9a5c+cC8tiJaYG9u7/y
2OJ9pw/nt40diY2BQqGIj49H/REemEiQxkI5m81miUSCerFMJpv62xxBYEhI
SFJS0j9EfQ67w2Z13GhlN2ZRXZQsCJ7dfOzlsg8MDpgH7Kyu/CMrUETi0FD0
NDY2FhcX5+TkVFdXy+VyqVSKS5GZcPVyVzqSM+GvuOxDpu4OVa+mz+rw9J7E
nYK748yZM4gwJ/L4m21yht9ws+OgIEmfJKm2tnb79u2nT5/2rEqO9Ov1emYw
uDvbm4TnMuJCYkVW1q59MTAwgCCZma26pqYG5SZeV1VVtba24k/Mai9MLYPp
reHDNQQJwqv0a3WdDbXNWnERV9nfNZ7nSIhbjhw5gnAFdUyPv55tckZFgJm7
XqvV+qTFEuE69JKbm+vxkyyj0Qg5M715b7ixVZbHL04pkA85WCZnk8nU1dXF
xMYQMszMtPZ0d3ejaoO/XvvQ0+cLvBKEFzG1SRqE/Aphc1NieIZMrRxPzziN
RhMVFZWcnNzZ2emxx1glZ9SaORxOXl4etOCrB2rQUUJCQkFBgcdyRjCpVqvr
6urw88ZbuwadNvOg4wYNJlMDUo5TgMxHqMwszAcni0SitrY2XGzQMsKAMR4B
kJyJAMLVmp2ZdzYmTyrLi82U9erH1VRnsVhQu8QdgTvI43X02CNnHA6Px0PI
itjVh+M4kCGHDh2Ki4ubSB+wwcHBlpaWGz/NtHdd5Ev4Ao0PewDjMOFSXD+4
AJDg2tpaZvVqFC44EajIQMtuypbkTAQQTmVFQWHs8ZTynPCUi1r9uDvH9vT0
xMbGnj17tr293bMUsETOsDHqzjk5OQ0NDb6dbAEJOHHiBDwzkUYVHAKc1tra
eoN5p9UZuzYc/GJf9UTnFhw/ODrkuc1mw3lHkFxZWYmCXjRCdXU1zMzMbD+u
fZKciUBiyIHbQ9J2MSOupK93/MGv2WyGnJnRgp4lgCVyVqlUmZmZ3poOdCKg
Cp+WlnbtZPvjYmhoCPnZ1NQ09hB7l+jQ2gMHvkhTTVl7s2sElB3MknwoEOvr
62HjgoKC4uJiJBjJdozgQdlEciYCDJdJ3VFXWyO1mMZfubVarVwuNyUlRSgU
etZngw1y7uvrq6ioyM/PZ8NiIvDV0aNHExMTJ/g4En5TKpUKhWJUybtcqsQP
Dp3cFSWbitZ1pvkCVS1kcmdnJyoIyPCMjAw+n493mNVhJjiwkeRMBBhO66C5
z2weHHKOP1JjxmsUFRWlp6ejEu3Bt/tczqg7I3KLi4uTy+VsmDIIiVm/fv3J
kycn3lcEZ6Surg7eu76fndqyTSuijp4R2Ie/sbPLrBNUXGxsVXrv6SBieKgS
9RGcX6QH4TGEXFJSgjKovb2dWZrcW89eSc4EcSVwCIfDCQkJqays9ODjvpUz
rIXILSYmRiQSscHMAL7Kzs5GZk58Ugi9Xl9bWwvbX6/x1jnsrDszb2vwyrga
w+C3jewORXJsSRm3ZcJyZpovcG10d3cjhxEkl5aWCgQCFBZisbilpWUi3S9H
g+RMEFdRXl4eFhaGnx48SvOhnBGwyWQypt/aFH/1GCiVSsSWPB7PKzP2dHZ2
wo3Xk5Vz2CXnnk1PjuE1a21O+5C1W6ExqPLic6sr6ic4pSbKgubmZma1caFQ
iAsDdSskA+XOpD5sJTkTxFXgpkPwjHjPg0mPfSVnBHU9PT3QICI6lsTMDIWF
hXPnzr1mVjoPgScRu/b29o41YaZrwKxSXCzKF7ZkhqcIKgQengiTydTe3s4M
G8FRJCYm4pKor693ZyyMVyA5E8RVIMZDgBQaGgrXjTfe85Wc8XUI7YqLixFb
TuX33pCKiooVK1YcPXrUK3JGpIoDxNkZayle88W22tQzuS1y/rk0XjN/PPmB
2ofFYunr69PpdA0NDampqbGxsVwuV61Ww5AoEaZyLA/JmSCupamp6fTp04iU
/ELOVqsV9W7cy4jr2Da1JizHtMp6ZW84HchYaHOs7NULFbwzB5Orc04cjC2o
FrndoxLuRaiMSlN0dDS0jG9Rj4Dv8snId6Rh9uzZ58+fp4mPCOIyXV1dWVlZ
mZmZHR0d49Ld1MsZyYP6kNTq6moWrliEYi4iIiI9Pd1bs8Tb7XaVSsUMfL7+
Pm2GAV27rLO3valZqdEabnT2EIQLBAKcbmi5trYWZxC/NjY2+nyMJ5I0Z86c
hIQEthW4BOFDEKvgJo2Pj8cNMi7jTbGcYSqYOS8vr6ysbMraQsdFVVXVqlWr
QkJCvBV8Qsgwc01NTVtbm8fWQmJQ/uJkiUSiuro6JLKwsJDH4ymVSja02OPi
Qemwffv25557bt26dUieVqslRRMEA27eqKio0NDQcc2zMZVyxt2KSndpaWlR
UdFYbbA+BWVHbGwsglIvtgwMDAxUVFRgz+PdJ8ovVIVkMplUKhUKhcXFxSUl
JdAgcs9ms0HLLBFgd3d3WFjYM8888x//8R+PPfZYcHAwEunbYfgEwR56enpQ
o8Q9Aku7L4GplDOzHHNlZWVnZydLrHItiG9TU1MnOHz7KnA6oFMEk7D0DXcL
5aJ47e3t1Wg0UBwKsgsXLqBEQ5Cs0+lwmrATtuWe1Wrdu3fvXXfdNWPGjB/+
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
9PXeXbbfPZPSq1DyGY/TvS+Y79FfumrRt25h1d1P4l1KI966tPhd8yvRSXc8
70ZF3Yt19ry5xf5RnUgHmjSe0PgEr3KxmM9h94rEMvX6AUp727ncpl4sxRHS
OZMy8JG4m1UcEVlWX5ubnFmYltf13z/t53FYNCqVWltTy+FLVCEjFnQ31dZQ
qTW0pm7JkyhRyOTCni4Ws4ZWW9Pcw3+aLtLu6gfOBnPfmz/7rbf/OWeuwb7j
8aVMjkhnBvLQeDhzadSkWz9HVtR0qFddNydYh/x6JKFZIzuDEBqHyQjnfh6b
nuB6N78oPOB+THhEuWACw1PewymPjbU2uXDdxSmSWFjZo1MjeGg8nAVt7VUZ
4UWtrb3qHVNBC4XBILboyIUFQug/BsN56HhoEB1SqVRjk5AqJKKex5W1bc0V
lOpaal23mpfgautviIkmNbAmt+scHMPfNg5rPJyfEPIl/bp6czxCSF2qcD5/
/vzgPQ4CgYBCoeTn54vFOtAzeMwE/LY8P5/MMip3EncCspfFYtXU1LS0tAzN
YS8vL02Gcx+HRC72IjbyxCNfL3SXEoIDvQPSqrs6a5oEoq7akl9v3/RLSO3g
iVtLMm96usdUVNURU+/Z23ncC2bydaY1CKGXkSqcz5w5w2Aw6uvrIyMjXVxc
TExMTp8+raFbmDVMrOSWpJG4rMm+nY5EIjk4OFhZWfn5+SUlJTGZTFjo7e29
d+9ejYUzo+S2p9kqz5xm3kg3e0s6c3wvHTnxzaHvbtyy/imM3kInxh754H8+
2G+Q0SSgRt3+dMXcd7/+7pKl+ZkNy1bs2vQzsU3833sp5TaWJcVVNjPpueS0
6Jj0kiIu3lSOkKZQqVRTU9OtW7f+8ssvxsbG//jHP2YM0NfXj42NLSkpIRKJ
eVNLbk5OLvxncnabOCAtLe3mzZsrV678wx/+8Mc//nHp0qVmZmZxcXFwqA0M
DDIzMzUSzoKS5AiPb+1y6rtH7H3RQ7wXEB4Yk/TA/Zb1Tus4RrOgX55v+7W1
5daodqWij1/q9f17iz7//m4Gn1XuctdhuV8+VzwYvgphV0eem7PphjUO99xd
953/37mzl+/dcquqV3enTUBoaqutrT169Ojrr78+a9asv/zlLzOGmDNnzsKF
CxcsWDB/KlmwYKGevh7s+GRt/ol58+a99dZbM2fOVB1J+OJvf/vbsmXL4Ny3
fv161RyCE07REBkTaHXqYVvHyH26+5uTjp7YtMHgcDSRWdvGG7iVpcT+4FWr
bZEspbJPTI86d+TmnTiGVCmked5zXuKb959wVjDTHH3ObfFIKCylJAbHpGVk
RPkft/q/z+6VCGTY6xohTVBVzjt27PDx8XF1dTUyMoJMhjx5++23PT09o6Oj
w8LC7iO1hQ0IDAy0sLCAlIYjOXv27G+//dbZ2fnRo0cmJiY7d+6EylkTf2zt
zPAOdz7lRxV2C5TKEccu4VdWEJPv29o4GBrfTG190tuu+JdvLlt9HsVWKrv7
aqN+PBMen98JX5NdgpyW3ynofhbO3BK/wKsbb0TWsWXKoqTcenaPsinX8vqx
93xz+BjOCGlEZWUlXHFfuHBBIBBIJBIKhRIUFGRpaeng4IDDVI4HjUaDs5u1
tXVAQACJRBINjELt5+ensTZneU2oh+exEwFFzGbxiNncVx9Prq3lSPjkDPuL
582SKuBxdc5HblzZngBp3i2kBm05HRZS1KNUSqi3orxX/VoleXoK4RKtPL1M
L5CUQkFPRUJOQ6dIyX0Y6WB1zK68RYLtGghpxGBvjaFd6Xp6etra2vA24RcG
2QvHsKurS/R0ZoCnNNlbQ95eWpwdHFdAa+FAXkrZbA63ua6po5HRIlcObKwz
xcfL3fis59XLNvZW9o5EOp1adN3w3Q9XLL7ol0fKjj2w7pWFGz9yjIlNC7qz
e8vaV786FlLG6Hvy1LZoA2ubDZfKhVIJMymvXUivTg22O+bsF9OMwYyQpox2
EwoOfTZOcAB/23ahlX7OsG1Jd3UepaY2LyGH+CCBIlUOnGX5NY+JcVY/mH+8
duu+Y79S+0S9FQ8sju7csMH4klVoUtLtLdu+3rhu/dXb9r523kfWrf/86y+u
ppR3P3mqoOzy+dNr3zO6eMvt/Ilzrh5eriZO98xj6Rp8CQi99Cbl9u2XlnbC
WSpuSwx8UFJWWlRanhZXNnSmWIVcJpNIpFLVfT+KfpkcFgwMeNIvl8r6ZbIn
C+B/8I1cJpU/a7JQMIt8zQ3mvfPPWW+9s0BP/8xt/xqhHKtmhDQJw1mbtBLO
MrGoMtQzOC46OD67mJDdPSErlfd1VmbEu//sk1FEqe/gCfC6CiENw3DWJq2E
s6K/n8dqaWOXRGcRc+KYE1XgslmMvJAHTTydGqwEoekLw1mbtNTm/IRCXF9E
KqskTdBvVf6YWB5/+y5ZwMEuPAhpBYazNmkvnBUiXmcHi8XjT1CWytsZrZQC
Kr9f9PzHIoQmAIazNmmxckYITW0YztqE4YwQUhOGszZhOCOE1IThrE0Yzggh
NWE4axOGM0JITRjO2oThjBBSE4azNmE4I4TUhOGsTRjOCCE1YThrE4YzQkhN
GM7ahOGMEFIThPPZs2fNzMwwnLXAw8Nj9+7d6enpGM4Iod9XUVFx+vRpyOfu
7okZWxL9Djc3N0NDQwxnhNBztba2hoeHR0RECASCyd6X6S8jI8PHx4dGo2li
gleEEEIIIYQQQgghhBBCCKGX1v8Dc4qJmA==
    "], {{0, 382}, {479, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{479, 382},
  PlotRange->{{0, 479}, {0, 382}}]], "Graphics",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.775514831541025*^9}],

Cell[TextData[{
 "\:53d8\:6362\:5982\:4e0b\n                           ",
 Cell[BoxData[
  FormBox[
   TagBox[
    RowBox[{
     RowBox[{"[", GridBox[{
        {"d"},
        {"q"}
       }], "]"}], "=", 
     RowBox[{
      RowBox[{"[", GridBox[{
         {
          RowBox[{"c", "o", "s", "\[CurlyPhi]"}], 
          RowBox[{"s", "i", "n", "\[CurlyPhi]"}]},
         {
          RowBox[{
           RowBox[{"-", "s"}], "i", "n", "\[CurlyPhi]"}], 
          RowBox[{"c", "o", "s", "\[CurlyPhi]"}]}
        }], "]"}], "[", GridBox[{
        {"\[Alpha]"},
        {"\[Beta]"}
       }], "]"}]}],
    "MathMLPresentationTag",
    AutoDelete->True], TraditionalForm]]]
}], "TextIndent",
 CellChangeTimes->{{3.7755148506212254`*^9, 3.7755148890834255`*^9}}],

Cell["", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.742780435552015*^9, {3.7427805225606155`*^9, 3.7427805311082153`*^9}, {
   3.7428148256639304`*^9, 3.742814831320175*^9}, 3.7428151768156633`*^9, 
   3.7463304896718435`*^9, 3.7463305251724443`*^9, {3.7463305629908442`*^9, 
   3.7463306219152446`*^9}, 3.7463307457478456`*^9, {3.746332918958259*^9, 
   3.746332918958259*^9}, 3.7755147976066256`*^9, {3.7755148363678255`*^9, 
   3.7755148374014254`*^9}, {3.7755148686400256`*^9, 3.775514893883026*^9}},
 TextAlignment->Left],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"AB2DQ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "wt", "]"}], ",", 
       RowBox[{"Sin", "[", "wt", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "wt", "]"}]}], ",", 
       RowBox[{"Cos", "[", "wt", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "AB2DQ", "]"}]}], "Code",
 CellChangeTimes->{3.7755148797846255`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", "wt", "]"}], 
      RowBox[{"Sin", "[", "wt", "]"}]},
     {
      RowBox[{"-", 
       RowBox[{"Sin", "[", "wt", "]"}]}], 
      RowBox[{"Cos", "[", "wt", "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.775516218158234*^9, 3.77551888046004*^9}]
}, Open  ]],

Cell["DQ\:53d8\:6362\:540e\:7684DQ\:5206\:91cf\:6ce2\:5f62", "TextIndent",
 CellChangeTimes->{{3.775516018147633*^9, 3.775516044851033*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DQ", "=", 
   RowBox[{"AB2DQ", ".", "AB"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ud", "=", 
   RowBox[{"DQ", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uq", "=", 
   RowBox[{"DQ", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ud", ",", "uq"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"wt", ",", "0", ",", 
     RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(u\), \(\(d\)\(+\)\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(u\), \(\(q\)\(+\)\)]\)\>\""}], "}"}], ",", 
      RowBox[{"LegendFunction", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Framed", "[", 
          RowBox[{"#", ",", 
           RowBox[{"RoundingRadius", "\[Rule]", "0"}]}], "]"}], "&"}], 
        ")"}]}], ",", 
      RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", 
      RowBox[{"{", 
       RowBox[{"RGBColor", "[", "\"\<#107c41\>\"", "]"}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.775516052153633*^9, 3.7755160588876333`*^9}, 
   3.7755188661008406`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1: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
jrxFB9V9N81XpUUBn9RS/u//e/4PR/iNSQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.06274509803921569, 0.48627450980392156`, 0.2549019607843137]], 
        LineBox[CompressedData["
1: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
7N1bEs4bwzMB0czla3OI/byDfly0MZgdd6J53ZxDnana067YGB7OKPx1SJpD
USepst38JqC7NfyZcekc0thgeMvY3gRCE63XrGafRxcqotne8JsCnwcbR/6N
eRQzuCObx8QM8suPu6pEzSPLqomM9FNmwBR+1ZOROI8G6rUXlb3MICvL8V1c
1jxSvM7tMJ1sBkf7mzx86+aReVjRr7sjZhBhnDmsL7KANkjfaKj1NweRzYb1
PfELaM3pAwV5CRYwxJ0q8iltAXXaiMc6P7WAN4OTFrlPFpCO8akjkq8t4PSD
xI6A4gVEf2g8oNJqAcVSI8OKrQuIUTB50E7cEmy5b3CcllxEA2cYucM3LSF7
4OPu4ZhFtGrEP5HmQIfAchmfhuRF9NS385KqJx3oac5lxY8W0bbCSHONIDpQ
rCX0bhQuIg3QFFtKooN50xnzzd8WkSB/Au3aFzosvOd0dqItIceNei42alag
n6rzcCJqCe0sc46k9FlB2KeGrmv3l1DtDZcxxVEr+PjXVko8YwnVMe+2KM9a
wSFd79t7CpeQckK+aB+VATq/CryufV9C3PUTPdy7GKC1Y/1RmuwyajfItJcN
ZYC3dUFo5rpl9I7y9HXAHQa8CTnwfvfWZSTlqtPzKZ4Be1ptdtpoL6OIlLcX
OLMYsNM3ViHTbhmtibt0TrmeAWpV3P92PVpGNEJWhyZEwKWJGNWanGWkpLjr
c64EAc+l1zlav1pGRrJvwtTkCNjqBD0BVcsoTT7rStsWAjaLXK2u/rWM1ESY
pg36BDjs5ea0niR/nzV+M8SYgCenYrTHFpZRfEZe8Ro6Acqv8gpEqSuISziq
ZsaegHXHR5KPb1tBxzOpnIbeBJwKvtL6Z+cKGjK25pAMJCA9h0ssAK2gj//9
fVsZSoAiZe31DJMVpOA9o/35LgFyj467/XFbQQw7oW6PTAJs6n9l+3uvoHva
unP0LAKSZr1+igSvIE42dF8mlwAZg2jrnTErqHuu6syR1wRIjtfq+RetINMp
ax/dGgLi75ad/FW2gu54/OVVridASiPfx/zTCgraq8j/5yvJV+PyldtWUM/J
Mqu1beT+1eF1d/tWkJrGjvv3OgmQLvUZXvy1grq2H9P52UPa47CXa1hYQdeS
27N3DxGQ+Mhiz14OFhLNN3HY+YuA1fqHLTL4WahPz81bcpQA2dtbwq/IslDT
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
arioKA0dXiVXSghT/D+AmqIM
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-104.2432944795564, 372.94373473234657`}}, {{
        0, 6.283185307179586}, {-104.2432944795564, 372.94373473234657`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(\\(d\\)\\(+\\)\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(\\(q\\)\\(+\\)\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], RoundingRadius -> 0, StripOnInput -> False], 
        TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.04183006535947713, 0.3241830065359477, 
                    0.16993464052287582`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.06274509803921569, 0.48627450980392156, \
0.2549019607843137]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 0, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.775516218267434*^9, 3.7755188805680404`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["4\:3001\:4e09\:76f8\:9759\:6b62\:5750\:6807\:7cfbABC\
\:5230\:4e24\:76f8\:65cb\:8f6c\:5750\:6807\:7cfbdq\:7684\:53d8\:6362", \
"Section",
 FontFamily->"\:5fae\:8f6f\:96c5\:9ed1"]], "Text",
 CellChangeTimes->{{3.742814896726241*^9, 3.742814927069916*^9}, {
   3.742814962397966*^9, 3.7428149807572823`*^9}, 3.7463307956836452`*^9, {
   3.746331135468248*^9, 3.746331179812048*^9}}],

Cell[TextData[{
 "\:4e09\:76f8\:9759\:6b62\:5750\:6807\:7cfbABC\:53d8\:6362\:5230\:4e24\:76f8\
\:65cb\:8f6c\:5750\:6807\:7cfb\:ff0c\:5373Park\:53d8\:6362\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"[", GridBox[{
       {"d"},
       {"q"}
      }], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["2", "3"], "[", GridBox[{
         {
          RowBox[{"c", "o", "s", "\[CurlyPhi]"}], 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], "c", "o", "s", "\[CurlyPhi]"}], "+", 
           RowBox[{
            FractionBox[
             SqrtBox["3"], "2"], "s", "i", "n", "\[CurlyPhi]"}]}], 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], "c", "o", "s", "\[CurlyPhi]"}], "-", 
           RowBox[{
            FractionBox[
             SqrtBox["3"], "2"], "s", "i", "n", "\[CurlyPhi]"}]}]},
         {
          RowBox[{
           RowBox[{"-", "s"}], "i", "n", "\[CurlyPhi]"}], 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], "s", "i", "n", "\[CurlyPhi]"}], "+", 
           RowBox[{
            FractionBox[
             SqrtBox["3"], "2"], "c", "o", "s", "\[CurlyPhi]"}]}], 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], "s", "i", "n", "\[CurlyPhi]"}], "-", 
           RowBox[{
            FractionBox[
             SqrtBox["3"], "2"], "c", "o", "s", "\[CurlyPhi]"}]}]}
        }], "]"}], "[", GridBox[{
        {"a"},
        {"b"},
        {"c"}
       }], "]"}], 
     TagBox[
      RowBox[{"=", 
       RowBox[{
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], "[", GridBox[{
           {
            RowBox[{"c", "o", "s", "\[CurlyPhi]"}], 
            RowBox[{"c", "o", 
             RowBox[{"s", "\[InvisibleApplication]", 
              RowBox[{"(", 
               RowBox[{"\[CurlyPhi]", "-", 
                FractionBox[
                 RowBox[{"2", "\[Pi]"}], "3"]}], ")"}]}]}], 
            RowBox[{"c", "o", 
             RowBox[{"s", "\[InvisibleApplication]", 
              RowBox[{"(", 
               RowBox[{"\[CurlyPhi]", "+", 
                FractionBox[
                 RowBox[{"2", "\[Pi]"}], "3"]}], ")"}]}]}]},
           {
            RowBox[{
             RowBox[{"-", "s"}], "i", "n", "\[CurlyPhi]"}], 
            RowBox[{
             RowBox[{"-", "s"}], "i", 
             RowBox[{"n", "\[InvisibleApplication]", 
              RowBox[{"(", 
               RowBox[{"\[CurlyPhi]", "-", 
                FractionBox[
                 RowBox[{"2", "\[Pi]"}], "3"]}], ")"}]}]}], 
            RowBox[{
             RowBox[{"-", "s"}], "i", 
             RowBox[{"n", "\[InvisibleApplication]", 
              RowBox[{"(", 
               RowBox[{"\[CurlyPhi]", "+", 
                FractionBox[
                 RowBox[{"2", "\[Pi]"}], "3"]}], ")"}]}]}]}
          }], "]"}], "[", GridBox[{
          {"a"},
          {"b"},
          {"c"}
         }], "]"}]}],
      "MathMLPresentationTag",
      AutoDelete->True]}]}], TraditionalForm]], "Text",
  CellChangeTimes->{
   3.74281503518704*^9, 3.7463311716714478`*^9, {3.7463312783336487`*^9, 
    3.746331293416649*^9}, {3.7525379164597583`*^9, 3.752537944495758*^9}, 
    3.752538001333559*^9, 3.7754608803258004`*^9}]
}], "TextIndent",
 CellChangeTimes->{{3.7755160830704336`*^9, 3.7755161551632338`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ABC2DQZ", "=", 
   RowBox[{
    RowBox[{"2", "/", "3"}], " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "wt", "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], " ", 
          RowBox[{"Cos", "[", "wt", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}], " ", 
          RowBox[{"Sin", "[", "wt", "]"}]}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], 
          RowBox[{"Cos", "[", "wt", "]"}]}], "-", 
         RowBox[{
          RowBox[{
           RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}], " ", 
          RowBox[{"Sin", "[", "wt", "]"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "wt", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "/", "2"}], " ", 
          RowBox[{"Sin", "[", "wt", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}], " ", 
          RowBox[{"Cos", "[", "wt", "]"}]}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "/", "2"}], " ", 
          RowBox[{"Sin", "[", "wt", "]"}]}], "-", 
         RowBox[{
          RowBox[{
           RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}], " ", 
          RowBox[{"Cos", "[", "wt", "]"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", " ", 
        RowBox[{"1", "/", "2"}], ",", " ", 
        RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "ABC2DQZ", "]"}]}], "Code",
 CellChangeTimes->{3.775516161395434*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "wt", "]"}]}], "3"], 
      RowBox[{
       FractionBox["2", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"Cos", "[", "wt", "]"}], "2"]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", "wt", "]"}]}]}], ")"}]}], 
      RowBox[{
       FractionBox["2", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"Cos", "[", "wt", "]"}], "2"]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", "wt", "]"}]}]}], ")"}]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Sin", "[", "wt", "]"}]}], "3"]}], 
      RowBox[{
       FractionBox["2", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          SqrtBox["3"], " ", 
          RowBox[{"Cos", "[", "wt", "]"}]}], "+", 
         FractionBox[
          RowBox[{"Sin", "[", "wt", "]"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["2", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", 
          SqrtBox["3"], " ", 
          RowBox[{"Cos", "[", "wt", "]"}]}], "+", 
         FractionBox[
          RowBox[{"Sin", "[", "wt", "]"}], "2"]}], ")"}]}]},
     {
      FractionBox["1", "3"], 
      FractionBox["1", "3"], 
      FractionBox["1", "3"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7755162183142343`*^9, 3.7755188806090403`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DQZ", "=", 
   RowBox[{"ABC2DQZ", ".", "ABC"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dx", "=", 
   RowBox[{"DQZ", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qx", "=", 
   RowBox[{"DQZ", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zx", "=", 
   RowBox[{"DQZ", "[", 
    RowBox[{"[", 
     RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dx", ",", "qx", ",", "zx"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"wt", ",", "0", ",", 
     RowBox[{"4", "*", "Pi"}]}], "}"}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{"\"\<Expressions\>\"", ",", 
      RowBox[{"LegendFunction", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Framed", "[", 
          RowBox[{"#", ",", 
           RowBox[{"RoundingRadius", "\[Rule]", "0"}]}], "]"}], "&"}], 
        ")"}]}], ",", 
      RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", 
      RowBox[{"{", 
       RowBox[{"RGBColor", "[", "\"\<#107c41\>\"", "]"}], "}"}], ",", "Red"}],
      "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.748228539705638*^9, 3.7482285922642384`*^9}, {
  3.7482286532350388`*^9, 3.74822896282144*^9}, {3.7754541705034*^9, 
  3.7754541909664*^9}, {3.7755161593272343`*^9, 3.775516190447234*^9}, {
  3.7755188432628403`*^9, 3.7755188476238403`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1: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
ek0hJvLDb2vX8irD7kyvd9ofBuoVbfimBZXh+oKVtPQnA3PRgTV+ksqY8V5u
yf2agQDNMgMrdWWssx40VSP4JanNWpRFUQZnOL1vKcE3uXEdQ8U6yniVUlIY
QvBPd+fMZQUjZVjNGIemxTOw7pDl4uk1yliYE7jpRvCTz/KXY0ttlVHHcDtA
cmRgb59Pi5+DMuxtG/q51zNwa0VScpuLMqrbf7xJNmZAbbD5VzFdGe/lFn+k
SDNgkeHZNRBAaBLH8OwiBtysRssVQpXRs0fJcA0fA2lZpODDLGV0JifWWc7Q
MW+zvc8vWRlNT7MSut/RIT/57f65VGXMzd4pEn5Nh3Hu3qy2NGWsPxAVznpF
R9BsjpPVGWWoF/Zpzz6hI/mq4TLWeWVcPqhhL1ZPx2WneqEbucpYGWSyy7OG
jjcFX+oUCpXB5SfyIu82HVMunBznG4SfgQlrLpXRIcElvPdwGeFHtcpCxw06
dG9ku9XeVkbAxkZR6+t02GxfZjJ9TxkX4jbv/5pH8C9freSyGuL+niuBT6/Q
EV/m9MOvThkbe8919OcS/O/5selcozIqLsm9ML5Ixx2h6Py2JmXo1yx4Pcqm
YzBu/4/aFmUY+YYqF58l8h0/YXLzlTK2r3QWeZZFhz0jZ+/5LmXQzcaWyZ2m
I+7tjfojb5VREtF19OwpOko2PRDe3Uf4+65x2cYMOvrrmpyZH4nr2xsXG52k
Q2rlmzNbvygjMVXGzj6djnVFg+/XfFPGWPuK5swTdLBVpinLfyhjG+3TRRKh
CzN4Q1XHlUFNkG98lEZHj4DUbbFpZXi/E7P+//3Jor1qf/78UkbVSnOpu/+/
X/mpv2Z4nqgPt6PZPKHDdlkeecOlAlFby1sxxHyXXju0PeFTgUzhinhVYv12
B3e5O0IqOOh/9dw8ofkeBXhdFVUBd5QhtygR/0oTTt5JSRVsDm4o20TkF1B4
aCRhsQq0apOu1v3/PkUp0zhMXgXvSzo7/Al/XqRfifVUUsHKyG2rQfj3l6+8
zl5NBR8w2G5P+Gu456GQuaYKhPddyzh8gQ7fHy1O2lQV9D35HjmTQ0eG77ss
mWUq6Ca7+p+5TEdD13AfryERr3J1QNA1Oqi1giH9pirwKJfdlV9Eh7uRbEXr
ahWE7ZlZK1FCx7F8zblqmgo+ny3kKiqnYyzNOuWcrQqSfKS6Yu7TQeZ1fnnY
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
E9riX6cUN4uKPVrJ258Q+b2PUoz7w6Yi+0uO7yJC7x/0/TK9mwo1iX+zKwk/
NN0LHcdiqfjS9UVlA+HXk5bRyuE4KsSmp99aE34GWK9Q/xJP1PvyCj11wm+R
O3tTPyQS/b9XXPkrUR+nC0I7O5OoON9HHtQi+HpCwulJazIVqTLk5ktEvTMP
njZoSqFiusTah9uagzdBZJ7aY1SsNyuuZltyEPs+IPheGhU5U23pR1dzoLyl
tPNWOhU6rFajw+Yc+JlbFBRkUhFQtp7LeAUHgT9apt9lEffLJzddIPo14rL3
OqlzVLRdv7L9K9HPCcIHP8ZdpEK9r29BRZeoT81iw1u5VOyVNjAU1eYgLTI/
/utlKh6T6nx6NDi48LZJcUs+FU5lx/8oKHNw9bhH0OFCKgT9bycfVeCgyPrH
veoiwo+oyc3vZTi4f13SVbuUiuDtAuPaxPPZvcctfb6SClqLacimBTb69L69
X15Fhal8jfjzX2x8/hir519NRdBeiZO6U2xMbshpfvWIirn9P06cGCZ4eMkX
voImKgKrLKWmiP3Gvipqz+ZeKqD3od+ygI3NYXzPkvuo8N1T4/zlEhvbyVmy
1R+ouDXPtykimw3/1PsVWp+J+d84BC4/zkaSO9fonxEqFgKNG3ZFslE7d9wv
/y8VRd+eexSYsNFYolrey6UDzpr18WeWsfHCr/yfJK8O3ELs6KGabPQ2d17Y
K6iDsNaiJc+l2fiVrfjaWVIHRy9VF20ZZ+Gf401KspQOdsq/82YNsSDAS4t5
sFgHigfrNBM+sLA42I+kpaCD9DGN43YtLCiqTnl7KOqANRxxRKiBBXLHoZJ0
ZR1kLSbbllWxoHtYbqFRVQf3Sp9N0spZWL76usMfdR3EuAXX/P//Q/wH3bY9
iQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.06274509803921569, 0.48627450980392156`, 0.2549019607843137]], 
        LineBox[CompressedData["
1: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
H2oKXhjAUf0I1/sZHn5ofSwaXtSNI0NtRWtRaX74XGa3UEzoJcytPDZfgR/E
p25XrNfiqO6iyXN9dX6ovtbt+KEERwb9+3X3G/NDmOPmAfVMHIWyTvnN7OWH
6WdnpQpScVSjcvZBtB0/5Ob7zxVdwpFuRBo5/yA/tEv/2erkh6OgfAVX/RP8
EDj++M9fDxxVvCm7/sqf8F/LUFOm40hb/g3PzHl+SDPof6lqiCPNl5x/9PL4
oZZn4v4LFhydmr2+7dUjfjgQi0pezzJQsaSCl1sVPxSv2msfHmEgdW8YPveS
H2J79Qd16hlIRehMW9skP1xv+hYUH8hAJ3ZycrjN8UMIfz/vhkMMVOhx3Xh6
mR/W3peWCtowkFJVabkwnwC4VWdlDlAYSMH1e6arhgCwecadMeygI4+Y0P6f
ugKw88Fr9t2VdJTzaKPIOUwAwlezyj5m0pEcCyUu114AbOLvqrf70JFMnmvA
zwABoFMTe7K56GjzTMfeqGoBKBy0WExToaEbKQ2HJhsEYDdVqSiFn4YkdMrC
nVoFQKjYqUVl1gVJnEkvUxoQAMuiapOdFS6IxH5YpmtZAKRmZhc+6rkgmc1/
/5CNN0GrbVXfA3VnRMXk8hqbN8HUV8tTae8dUP5nEaT2ehPI2oUlnXnsgKgx
GwfT3m0COaXnXgKXiOdN2w/Bk+ObYNdJZyX7HQ7o2lbXem4OQdiz7n9tX5I9
SitXVClTFIRhi6FtTkds0a2XdazsJwSB5cMbka3XzdHsSMmZGW9BeOl3VfLN
TnO0bzn/16CfIPwYeTi0eWQfmle7+rkiVBDeVQ6Jp2/dh2xTTz4/GicIOSHO
PQE1exDbfunoVwWCsPFB+9j7F6bo5FwES+q4IHRdClsoPWiADLeYrJM9heCc
xWOdQ45lDeZuvQGHjwsBKpbnzD01iTnfPjZ+z1sI+DS1LiZfW8ZOSia9pgYJ
gdqO4E9aVF64JTZ4Wy1WCO482S6Rd1IKFvmD9PULhUCn7fjZF+dUoWKt0N9u
Sgjm3M8r/HTeBcjI8GvyrBBkjJ0mPVUxhI7wN4zueSF4/fxhHC+LEXxZ/oO5
rBLrcRK10veNQfivqYCrgDAcje8otlsG8Jv5WHRUUxgKzz77OadrBqojgmMR
gcLg3hK0j/e4Jdh+IzcGhwpDuEhwnvhzS/Cb1sw+FS4MEp4pYTWSVlCxYu92
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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
hjs=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 4 Pi}, {-104.24330438158928`, 372.9438331508658}}, {{
        0, 12.566370614359172`}, {-104.24330438158928`, 372.9438331508658}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"dx", "qx", "zx"}, "LineLegend", DisplayFunction -> (FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], RoundingRadius -> 0, StripOnInput -> False], 
        TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.04183006535947713, 0.3241830065359477, 
                    0.16993464052287582`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.06274509803921569, 0.48627450980392156, \
0.2549019607843137]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.06274509803921569, 0.48627450980392156`, 
                    0.2549019607843137], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 0, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.775516218454634*^9, 3.77551885033584*^9, 
  3.7755188807160406`*^9}]
}, Open  ]]
},
WindowSize->{1920, 1008},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{595.1999999999999, 841.98}},
TaggingRules->{"$testsRun" -> False},
Magnification:>0.9 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (2016\:5e747\:670828\
\:65e5)",
StyleDefinitions->"Cambria Article.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 487, 9, 45, "Text"],
Cell[1048, 31, 798, 13, 53, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1849, 46, 179, 2, 24, "TextIndent"],
Cell[2031, 50, 1249, 45, 148, "Code"],
Cell[3283, 97, 107, 1, 24, "TextIndent"],
Cell[3393, 100, 905, 30, 97, "Code"],
Cell[4301, 132, 109, 1, 24, "TextIndent"],
Cell[4413, 135, 879, 30, 97, "Code"],
Cell[5295, 167, 109, 1, 24, "TextIndent"],
Cell[5407, 170, 881, 30, 97, "Code"],
Cell[6291, 202, 125, 1, 24, "TextIndent"],
Cell[6419, 205, 568, 16, 131, "Code"],
Cell[6990, 223, 143, 1, 24, "TextIndent"],
Cell[CellGroupData[{
Cell[7158, 228, 1260, 33, 45, "Code"],
Cell[8421, 263, 58085, 1026, 216, "Output"]
}, Open  ]],
Cell[66521, 1292, 140, 1, 24, "TextIndent"],
Cell[CellGroupData[{
Cell[66686, 1297, 1716, 40, 45, "Code"],
Cell[68405, 1339, 57571, 1019, 216, "Output"]
}, Open  ]],
Cell[125991, 2361, 144, 1, 24, "TextIndent"],
Cell[CellGroupData[{
Cell[126160, 2366, 318, 9, 63, "Code"],
Cell[126481, 2377, 1098, 34, 87, "Output"]
}, Open  ]],
Cell[127594, 2414, 90, 1, 26, "Input"],
Cell[127687, 2417, 1045, 16, 26, "Input"],
Cell[128735, 2435, 206, 3, 26, "Input"],
Cell[128944, 2440, 164, 2, 26, "Input"],
Cell[129111, 2444, 690, 10, 33, "Chapter",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[129804, 2456, 302, 4, 24, "TextIndent"],
Cell[130109, 2462, 22673, 378, 338, "Graphics"],
Cell[152785, 2842, 1193, 18, 22, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[153981, 2862, 1023, 36, 81, "TextIndent"],
Cell[CellGroupData[{
Cell[155029, 2902, 687, 22, 63, "Code"],
Cell[155719, 2926, 889, 28, 69, "Output"]
}, Open  ]],
Cell[156623, 2957, 199, 2, 24, "TextIndent"],
Cell[CellGroupData[{
Cell[156847, 2963, 209, 5, 63, "Code"],
Cell[157059, 2970, 1564, 48, 83, "Output"]
}, Open  ]],
Cell[158638, 3021, 127, 1, 24, "TextIndent"],
Cell[CellGroupData[{
Cell[158790, 3026, 1507, 42, 80, "Code"],
Cell[160300, 3070, 29592, 543, 216, "Output"]
}, Open  ]],
Cell[189907, 3616, 505, 7, 33, "Chapter",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[190415, 3625, 373, 8, 24, "TextIndent"],
Cell[190791, 3635, 38622, 639, 352, "Graphics"],
Cell[229416, 4276, 754, 26, 58, "TextIndent"],
Cell[230173, 4304, 570, 9, 18, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[CellGroupData[{
Cell[230768, 4317, 510, 16, 63, "Code"],
Cell[231281, 4335, 811, 23, 51, "Output"]
}, Open  ]],
Cell[232107, 4361, 140, 1, 24, "TextIndent"],
Cell[CellGroupData[{
Cell[232272, 4366, 1624, 46, 99, "Code"],
Cell[233899, 4414, 40051, 715, 222, "Output"]
}, Open  ]],
Cell[273965, 5132, 404, 6, 29, "Text"],
Cell[274372, 5140, 3408, 99, 83, "TextIndent"],
Cell[CellGroupData[{
Cell[277805, 5243, 1835, 55, 63, "Code"],
Cell[279643, 5300, 2266, 72, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281946, 5377, 1820, 49, 114, "Code"],
Cell[283769, 5428, 73706, 1284, 222, "Output"]
}, Open  ]]
}
]
*)

